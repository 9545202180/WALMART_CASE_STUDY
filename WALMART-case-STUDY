{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/9545202180/WALMART_CASE_STUDY/blob/main/WALMART-case-STUDY\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "id": "q8_NrUnJ9d9V"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 47,
      "metadata": {
        "id": "kETjaJAP_uAp"
      },
      "outputs": [],
      "source": [
        "url = \"https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/001/293/original/walmart_data.csv?1641285094\"\n",
        "df = pd.read_csv(url)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 48,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "yYlS-CtSAADu",
        "outputId": "0c1b5844-61a1-491f-98ac-5fd4ff88884d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        User_ID Product_ID Gender    Age  Occupation City_Category  \\\n",
              "0       1000001  P00069042      F   0-17          10             A   \n",
              "1       1000001  P00248942      F   0-17          10             A   \n",
              "2       1000001  P00087842      F   0-17          10             A   \n",
              "3       1000001  P00085442      F   0-17          10             A   \n",
              "4       1000002  P00285442      M    55+          16             C   \n",
              "...         ...        ...    ...    ...         ...           ...   \n",
              "550063  1006033  P00372445      M  51-55          13             B   \n",
              "550064  1006035  P00375436      F  26-35           1             C   \n",
              "550065  1006036  P00375436      F  26-35          15             B   \n",
              "550066  1006038  P00375436      F    55+           1             C   \n",
              "550067  1006039  P00371644      F  46-50           0             B   \n",
              "\n",
              "       Stay_In_Current_City_Years  Marital_Status  Product_Category  Purchase  \n",
              "0                               2               0                 3      8370  \n",
              "1                               2               0                 1     15200  \n",
              "2                               2               0                12      1422  \n",
              "3                               2               0                12      1057  \n",
              "4                              4+               0                 8      7969  \n",
              "...                           ...             ...               ...       ...  \n",
              "550063                          1               1                20       368  \n",
              "550064                          3               0                20       371  \n",
              "550065                         4+               1                20       137  \n",
              "550066                          2               0                20       365  \n",
              "550067                         4+               1                20       490  \n",
              "\n",
              "[550068 rows x 10 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d8524853-bb73-43f4-b67b-8f06a4455331\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User_ID</th>\n",
              "      <th>Product_ID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Occupation</th>\n",
              "      <th>City_Category</th>\n",
              "      <th>Stay_In_Current_City_Years</th>\n",
              "      <th>Marital_Status</th>\n",
              "      <th>Product_Category</th>\n",
              "      <th>Purchase</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1000001</td>\n",
              "      <td>P00069042</td>\n",
              "      <td>F</td>\n",
              "      <td>0-17</td>\n",
              "      <td>10</td>\n",
              "      <td>A</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>8370</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1000001</td>\n",
              "      <td>P00248942</td>\n",
              "      <td>F</td>\n",
              "      <td>0-17</td>\n",
              "      <td>10</td>\n",
              "      <td>A</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>15200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1000001</td>\n",
              "      <td>P00087842</td>\n",
              "      <td>F</td>\n",
              "      <td>0-17</td>\n",
              "      <td>10</td>\n",
              "      <td>A</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>1422</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1000001</td>\n",
              "      <td>P00085442</td>\n",
              "      <td>F</td>\n",
              "      <td>0-17</td>\n",
              "      <td>10</td>\n",
              "      <td>A</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>1057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1000002</td>\n",
              "      <td>P00285442</td>\n",
              "      <td>M</td>\n",
              "      <td>55+</td>\n",
              "      <td>16</td>\n",
              "      <td>C</td>\n",
              "      <td>4+</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>7969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550063</th>\n",
              "      <td>1006033</td>\n",
              "      <td>P00372445</td>\n",
              "      <td>M</td>\n",
              "      <td>51-55</td>\n",
              "      <td>13</td>\n",
              "      <td>B</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>20</td>\n",
              "      <td>368</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550064</th>\n",
              "      <td>1006035</td>\n",
              "      <td>P00375436</td>\n",
              "      <td>F</td>\n",
              "      <td>26-35</td>\n",
              "      <td>1</td>\n",
              "      <td>C</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>371</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550065</th>\n",
              "      <td>1006036</td>\n",
              "      <td>P00375436</td>\n",
              "      <td>F</td>\n",
              "      <td>26-35</td>\n",
              "      <td>15</td>\n",
              "      <td>B</td>\n",
              "      <td>4+</td>\n",
              "      <td>1</td>\n",
              "      <td>20</td>\n",
              "      <td>137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550066</th>\n",
              "      <td>1006038</td>\n",
              "      <td>P00375436</td>\n",
              "      <td>F</td>\n",
              "      <td>55+</td>\n",
              "      <td>1</td>\n",
              "      <td>C</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550067</th>\n",
              "      <td>1006039</td>\n",
              "      <td>P00371644</td>\n",
              "      <td>F</td>\n",
              "      <td>46-50</td>\n",
              "      <td>0</td>\n",
              "      <td>B</td>\n",
              "      <td>4+</td>\n",
              "      <td>1</td>\n",
              "      <td>20</td>\n",
              "      <td>490</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>550068 rows × 10 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8524853-bb73-43f4-b67b-8f06a4455331')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d8524853-bb73-43f4-b67b-8f06a4455331 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d8524853-bb73-43f4-b67b-8f06a4455331');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d810bfb5-3ac1-4577-9eea-0b5e998c7a7d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d810bfb5-3ac1-4577-9eea-0b5e998c7a7d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d810bfb5-3ac1-4577-9eea-0b5e998c7a7d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_f805d0d1-fc74-4f2c-9355-877fdce20cdf\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_f805d0d1-fc74-4f2c-9355-877fdce20cdf button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 48
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 49,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 207
        },
        "id": "Gnv1ATGs_fgv",
        "outputId": "a3c6a078-b49e-4c15-ee88-4b4d7a46b4d7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   User_ID Product_ID Gender   Age  Occupation City_Category  \\\n",
              "0  1000001  P00069042      F  0-17          10             A   \n",
              "1  1000001  P00248942      F  0-17          10             A   \n",
              "2  1000001  P00087842      F  0-17          10             A   \n",
              "3  1000001  P00085442      F  0-17          10             A   \n",
              "4  1000002  P00285442      M   55+          16             C   \n",
              "\n",
              "  Stay_In_Current_City_Years  Marital_Status  Product_Category  Purchase  \n",
              "0                          2               0                 3      8370  \n",
              "1                          2               0                 1     15200  \n",
              "2                          2               0                12      1422  \n",
              "3                          2               0                12      1057  \n",
              "4                         4+               0                 8      7969  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3ee0d142-4387-4d86-8cd0-d8e011314d0e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User_ID</th>\n",
              "      <th>Product_ID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Occupation</th>\n",
              "      <th>City_Category</th>\n",
              "      <th>Stay_In_Current_City_Years</th>\n",
              "      <th>Marital_Status</th>\n",
              "      <th>Product_Category</th>\n",
              "      <th>Purchase</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1000001</td>\n",
              "      <td>P00069042</td>\n",
              "      <td>F</td>\n",
              "      <td>0-17</td>\n",
              "      <td>10</td>\n",
              "      <td>A</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>8370</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1000001</td>\n",
              "      <td>P00248942</td>\n",
              "      <td>F</td>\n",
              "      <td>0-17</td>\n",
              "      <td>10</td>\n",
              "      <td>A</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>15200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1000001</td>\n",
              "      <td>P00087842</td>\n",
              "      <td>F</td>\n",
              "      <td>0-17</td>\n",
              "      <td>10</td>\n",
              "      <td>A</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>1422</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1000001</td>\n",
              "      <td>P00085442</td>\n",
              "      <td>F</td>\n",
              "      <td>0-17</td>\n",
              "      <td>10</td>\n",
              "      <td>A</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>1057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1000002</td>\n",
              "      <td>P00285442</td>\n",
              "      <td>M</td>\n",
              "      <td>55+</td>\n",
              "      <td>16</td>\n",
              "      <td>C</td>\n",
              "      <td>4+</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>7969</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ee0d142-4387-4d86-8cd0-d8e011314d0e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3ee0d142-4387-4d86-8cd0-d8e011314d0e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3ee0d142-4387-4d86-8cd0-d8e011314d0e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9f5e57b7-1ff2-48f8-88c2-3fa76c57a57b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f5e57b7-1ff2-48f8-88c2-3fa76c57a57b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9f5e57b7-1ff2-48f8-88c2-3fa76c57a57b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 49
        }
      ],
      "source": [
        "df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 50,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3JxEeVT6_jNn",
        "outputId": "26196f90-bd42-4ac2-f392-87727b580031"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 550068 entries, 0 to 550067\n",
            "Data columns (total 10 columns):\n",
            " #   Column                      Non-Null Count   Dtype \n",
            "---  ------                      --------------   ----- \n",
            " 0   User_ID                     550068 non-null  int64 \n",
            " 1   Product_ID                  550068 non-null  object\n",
            " 2   Gender                      550068 non-null  object\n",
            " 3   Age                         550068 non-null  object\n",
            " 4   Occupation                  550068 non-null  int64 \n",
            " 5   City_Category               550068 non-null  object\n",
            " 6   Stay_In_Current_City_Years  550068 non-null  object\n",
            " 7   Marital_Status              550068 non-null  int64 \n",
            " 8   Product_Category            550068 non-null  int64 \n",
            " 9   Purchase                    550068 non-null  int64 \n",
            "dtypes: int64(5), object(5)\n",
            "memory usage: 42.0+ MB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 51,
      "metadata": {
        "id": "izU--44gCfGI"
      },
      "outputs": [],
      "source": [
        "a = [\"Occupation\",\"Marital_Status\",\"Product_Category\"]\n",
        "df[a]= df[a].astype('object')\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 52,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OtHdRFbMBul5",
        "outputId": "a4f6ae95-45ef-4ffb-e6b0-81657c5043bf"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 550068 entries, 0 to 550067\n",
            "Data columns (total 10 columns):\n",
            " #   Column                      Non-Null Count   Dtype \n",
            "---  ------                      --------------   ----- \n",
            " 0   User_ID                     550068 non-null  int64 \n",
            " 1   Product_ID                  550068 non-null  object\n",
            " 2   Gender                      550068 non-null  object\n",
            " 3   Age                         550068 non-null  object\n",
            " 4   Occupation                  550068 non-null  object\n",
            " 5   City_Category               550068 non-null  object\n",
            " 6   Stay_In_Current_City_Years  550068 non-null  object\n",
            " 7   Marital_Status              550068 non-null  object\n",
            " 8   Product_Category            550068 non-null  object\n",
            " 9   Purchase                    550068 non-null  int64 \n",
            "dtypes: int64(2), object(8)\n",
            "memory usage: 42.0+ MB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 53,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 301
        },
        "id": "2t9vbXU_AiYP",
        "outputId": "28ab2971-6eb9-4336-eb47-f36d58a3518a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            User_ID       Purchase\n",
              "count  5.500680e+05  550068.000000\n",
              "mean   1.003029e+06    9263.968713\n",
              "std    1.727592e+03    5023.065394\n",
              "min    1.000001e+06      12.000000\n",
              "25%    1.001516e+06    5823.000000\n",
              "50%    1.003077e+06    8047.000000\n",
              "75%    1.004478e+06   12054.000000\n",
              "max    1.006040e+06   23961.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e7b454ef-9a1b-4edb-86ac-b7ae666e0105\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User_ID</th>\n",
              "      <th>Purchase</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>5.500680e+05</td>\n",
              "      <td>550068.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.003029e+06</td>\n",
              "      <td>9263.968713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.727592e+03</td>\n",
              "      <td>5023.065394</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000001e+06</td>\n",
              "      <td>12.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.001516e+06</td>\n",
              "      <td>5823.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.003077e+06</td>\n",
              "      <td>8047.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.004478e+06</td>\n",
              "      <td>12054.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.006040e+06</td>\n",
              "      <td>23961.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7b454ef-9a1b-4edb-86ac-b7ae666e0105')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e7b454ef-9a1b-4edb-86ac-b7ae666e0105 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e7b454ef-9a1b-4edb-86ac-b7ae666e0105');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ce63f5fb-c609-4da3-ba3d-9a1fc39ee3b4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ce63f5fb-c609-4da3-ba3d-9a1fc39ee3b4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ce63f5fb-c609-4da3-ba3d-9a1fc39ee3b4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 367117.89753373514,\n        \"min\": 1727.5915855305516,\n        \"max\": 1006040.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1003028.8424013031,\n          1003077.0,\n          550068.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 191363.80903912007,\n        \"min\": 12.0,\n        \"max\": 550068.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9263.968712959126,\n          8047.0,\n          550068.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 53
        }
      ],
      "source": [
        "df.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 54,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MRVoZd15Ak7m",
        "outputId": "28df18b3-fc8b-4949-8536-3343367e823c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "User_ID                       False\n",
              "Product_ID                    False\n",
              "Gender                        False\n",
              "Age                           False\n",
              "Occupation                    False\n",
              "City_Category                 False\n",
              "Stay_In_Current_City_Years    False\n",
              "Marital_Status                False\n",
              "Product_Category              False\n",
              "Purchase                      False\n",
              "dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ],
      "source": [
        "df.isnull().any()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 55,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ID9y6kgOBDBv",
        "outputId": "b895df43-643c-483a-db60-bb53d5b4840c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "User_ID       5891\n",
              "Product_ID    3631\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ],
      "source": [
        "unique = df[[\"User_ID\",\"Product_ID\"]].nunique()\n",
        "unique"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 55,
      "metadata": {
        "id": "IfxvpD9_IH_m"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 56,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eLySzhxbF5DA",
        "outputId": "68c526ed-3467-41c4-c9e5-9dccffefe691"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Gender\n",
              "M    414259\n",
              "F    135809\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ],
      "source": [
        "gender = df[\"Gender\"].value_counts()\n",
        "gender"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 57,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "xYCxeRqBIMs6",
        "outputId": "2e70bc26-8b57-4e9c-aa92-3d78fcc3969d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'M'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 57
        }
      ],
      "source": [
        "most_gender = gender.idxmax()\n",
        "most_gender"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 58,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K3R_2gJ1Ku0S",
        "outputId": "8a1c2c62-1b60-4ead-ed05-18c9eb3732e6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Product_ID\n",
              "P00265242    1880\n",
              "P00025442    1615\n",
              "P00110742    1612\n",
              "P00112142    1562\n",
              "P00057642    1470\n",
              "             ... \n",
              "P00314842       1\n",
              "P00298842       1\n",
              "P00231642       1\n",
              "P00204442       1\n",
              "P00066342       1\n",
              "Name: count, Length: 3631, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ],
      "source": [
        "product_count = df[\"Product_ID\"].value_counts()\n",
        "product_count"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 58,
      "metadata": {
        "id": "JdFDY-VSK1MY"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 59,
      "metadata": {
        "id": "DXVqf31LK2U3"
      },
      "outputs": [],
      "source": [
        "product_count = df[\"Product_ID\"].value_counts()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 60,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "-VKsRhbRIccf",
        "outputId": "39601b54-0746-4e1e-f3ca-5eace26ca5d9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'P00265242'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 60
        }
      ],
      "source": [
        "\n",
        "product_sold_most = product_count.idxmax()\n",
        "product_sold_most\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 61,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2cZqtl6tKIzY",
        "outputId": "416fc5ae-6cfe-472b-fb3e-a29410f42b3c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Age\n",
              "0-17      134913183\n",
              "18-25     913848675\n",
              "26-35    2031770578\n",
              "36-45    1026569884\n",
              "46-50     420843403\n",
              "51-55     367099644\n",
              "55+       200767375\n",
              "Name: Purchase, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ],
      "source": [
        "purchase_age_grp = df.groupby('Age')[\"Purchase\"].sum()\n",
        "purchase_age_grp"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 62,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WDw_wXtGLvg-",
        "outputId": "788ff9d9-1868-4bc0-eff8-c1eab4bcc201"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Age\n",
              "0-17      134913183\n",
              "18-25     913848675\n",
              "26-35    2031770578\n",
              "36-45    1026569884\n",
              "46-50     420843403\n",
              "51-55     367099644\n",
              "55+       200767375\n",
              "Name: Purchase, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ],
      "source": [
        "purchase_age_grp"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 63,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "bLvG7xKcLmrh",
        "outputId": "8dadd5f8-133b-43ce-cdf2-10e5231f504f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'26-35'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 63
        }
      ],
      "source": [
        "most_purchase_age_grp = purchase_age_grp.idxmax()\n",
        "most_purchase_age_grp"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 63,
      "metadata": {
        "id": "1oxIB1HBLxGr"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 64,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xML2tUzlLw28",
        "outputId": "e387d2b4-0a5a-4655-f4f9-bcbb99979898"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Occupation\n",
              "0     635406958\n",
              "1     424614144\n",
              "2     238028583\n",
              "3     162002168\n",
              "4     666244484\n",
              "5     113649759\n",
              "6     188416784\n",
              "7     557371587\n",
              "8      14737388\n",
              "9      54340046\n",
              "10    115844465\n",
              "11    106751618\n",
              "12    305449446\n",
              "13     71919481\n",
              "14    259454692\n",
              "15    118960211\n",
              "16    238346955\n",
              "17    393281453\n",
              "18     60721461\n",
              "19     73700617\n",
              "20    296570442\n",
              "Name: Purchase, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ],
      "source": [
        "Occupation = df.groupby('Occupation')[\"Purchase\"].sum()\n",
        "Occupation"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 65,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jDDkOu4JMMPv",
        "outputId": "f36eeb0f-073f-4520-e1b9-d6d3fa5da6f7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ],
      "source": [
        "Occupation_purchase = Occupation.idxmax()\n",
        "Occupation_purchase"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 66,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CpHcrz88MVM9",
        "outputId": "a499b4a8-d0db-4209-bc23-b248c93584e5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "City_Category\n",
              "A    1316471661\n",
              "B    2115533605\n",
              "C    1663807476\n",
              "Name: Purchase, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ],
      "source": [
        "City_Category = df.groupby(\"City_Category\")[\"Purchase\"].sum()\n",
        "City_Category"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 67,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "KYthK6OQM0DZ",
        "outputId": "6a874823-8dec-43da-fa8d-5d74fd8eb039"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'B'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 67
        }
      ],
      "source": [
        "most_purchase_City_Category = City_Category.idxmax()\n",
        "most_purchase_City_Category"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 68,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "l0jKeManNET7",
        "outputId": "e05d01f4-3c27-4fe6-e310-fd728b0da2d9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             User_ID Product_ID  Gender     Age  Occupation City_Category  \\\n",
              "count   5.500680e+05     550068  550068  550068    550068.0        550068   \n",
              "unique           NaN       3631       2       7        21.0             3   \n",
              "top              NaN  P00265242       M   26-35         4.0             B   \n",
              "freq             NaN       1880  414259  219587     72308.0        231173   \n",
              "mean    1.003029e+06        NaN     NaN     NaN         NaN           NaN   \n",
              "std     1.727592e+03        NaN     NaN     NaN         NaN           NaN   \n",
              "min     1.000001e+06        NaN     NaN     NaN         NaN           NaN   \n",
              "25%     1.001516e+06        NaN     NaN     NaN         NaN           NaN   \n",
              "50%     1.003077e+06        NaN     NaN     NaN         NaN           NaN   \n",
              "75%     1.004478e+06        NaN     NaN     NaN         NaN           NaN   \n",
              "max     1.006040e+06        NaN     NaN     NaN         NaN           NaN   \n",
              "\n",
              "       Stay_In_Current_City_Years  Marital_Status  Product_Category  \\\n",
              "count                      550068        550068.0          550068.0   \n",
              "unique                          5             2.0              20.0   \n",
              "top                             1             0.0               5.0   \n",
              "freq                       193821        324731.0          150933.0   \n",
              "mean                          NaN             NaN               NaN   \n",
              "std                           NaN             NaN               NaN   \n",
              "min                           NaN             NaN               NaN   \n",
              "25%                           NaN             NaN               NaN   \n",
              "50%                           NaN             NaN               NaN   \n",
              "75%                           NaN             NaN               NaN   \n",
              "max                           NaN             NaN               NaN   \n",
              "\n",
              "             Purchase  \n",
              "count   550068.000000  \n",
              "unique            NaN  \n",
              "top               NaN  \n",
              "freq              NaN  \n",
              "mean      9263.968713  \n",
              "std       5023.065394  \n",
              "min         12.000000  \n",
              "25%       5823.000000  \n",
              "50%       8047.000000  \n",
              "75%      12054.000000  \n",
              "max      23961.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-49d90a53-d6b8-4b3f-a84f-07b51b4aef4d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User_ID</th>\n",
              "      <th>Product_ID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Occupation</th>\n",
              "      <th>City_Category</th>\n",
              "      <th>Stay_In_Current_City_Years</th>\n",
              "      <th>Marital_Status</th>\n",
              "      <th>Product_Category</th>\n",
              "      <th>Purchase</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>5.500680e+05</td>\n",
              "      <td>550068</td>\n",
              "      <td>550068</td>\n",
              "      <td>550068</td>\n",
              "      <td>550068.0</td>\n",
              "      <td>550068</td>\n",
              "      <td>550068</td>\n",
              "      <td>550068.0</td>\n",
              "      <td>550068.0</td>\n",
              "      <td>550068.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>unique</th>\n",
              "      <td>NaN</td>\n",
              "      <td>3631</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>21.0</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>top</th>\n",
              "      <td>NaN</td>\n",
              "      <td>P00265242</td>\n",
              "      <td>M</td>\n",
              "      <td>26-35</td>\n",
              "      <td>4.0</td>\n",
              "      <td>B</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freq</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1880</td>\n",
              "      <td>414259</td>\n",
              "      <td>219587</td>\n",
              "      <td>72308.0</td>\n",
              "      <td>231173</td>\n",
              "      <td>193821</td>\n",
              "      <td>324731.0</td>\n",
              "      <td>150933.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.003029e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9263.968713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.727592e+03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5023.065394</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000001e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.001516e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5823.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.003077e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8047.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.004478e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12054.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.006040e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>23961.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49d90a53-d6b8-4b3f-a84f-07b51b4aef4d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-49d90a53-d6b8-4b3f-a84f-07b51b4aef4d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-49d90a53-d6b8-4b3f-a84f-07b51b4aef4d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-63e263d2-05eb-4d42-982e-9a99fce1e193\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63e263d2-05eb-4d42-982e-9a99fce1e193')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-63e263d2-05eb-4d42-982e-9a99fce1e193 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 367117.89753373514,\n        \"min\": 1727.5915855305516,\n        \"max\": 1006040.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1003028.8424013031,\n          1003077.0,\n          550068.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3631,\n          \"1880\",\n          \"550068\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"414259\",\n          \"550068\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          7,\n          \"219587\",\n          \"550068\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 265177.61390229885,\n        \"min\": 4.0,\n        \"max\": 550068.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          21.0,\n          72308.0,\n          550068.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"231173\",\n          \"550068\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stay_In_Current_City_Years\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          \"193821\",\n          \"550068\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 268766.2116590985,\n        \"min\": 0.0,\n        \"max\": 550068.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.0,\n          324731.0,\n          550068.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 259805.1913575503,\n        \"min\": 5.0,\n        \"max\": 550068.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          20.0,\n          150933.0,\n          550068.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 191363.80903912007,\n        \"min\": 12.0,\n        \"max\": 550068.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9263.968712959126,\n          8047.0,\n          550068.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 68
        }
      ],
      "source": [
        "df.describe(include=\"all\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 69,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "hA-Sb5bcSfaB",
        "outputId": "c8884c7e-0e2b-4476-9ab1-4af0bef7d4e8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                     value\n",
              "variable                   value          \n",
              "Age                        0-17   0.027455\n",
              "                           18-25  0.181178\n",
              "                           26-35  0.399200\n",
              "                           36-45  0.199999\n",
              "                           46-50  0.083082\n",
              "                           51-55  0.069993\n",
              "                           55+    0.039093\n",
              "City_Category              A      0.268549\n",
              "                           B      0.420263\n",
              "                           C      0.311189\n",
              "Gender                     F      0.246895\n",
              "                           M      0.753105\n",
              "Marital_Status             0      0.590347\n",
              "                           1      0.409653\n",
              "Occupation                 0      0.126599\n",
              "                           1      0.086218\n",
              "                           2      0.048336\n",
              "                           3      0.032087\n",
              "                           4      0.131453\n",
              "                           5      0.022137\n",
              "                           6      0.037005\n",
              "                           7      0.107501\n",
              "                           8      0.002811\n",
              "                           9      0.011437\n",
              "                           10     0.023506\n",
              "                           11     0.021063\n",
              "                           12     0.056682\n",
              "                           13     0.014049\n",
              "                           14     0.049647\n",
              "                           15     0.022115\n",
              "                           16     0.046123\n",
              "                           17     0.072796\n",
              "                           18     0.012039\n",
              "                           19     0.015382\n",
              "                           20     0.061014\n",
              "Product_Category           1      0.255201\n",
              "                           2      0.043384\n",
              "                           3      0.036746\n",
              "                           4      0.021366\n",
              "                           5      0.274390\n",
              "                           6      0.037206\n",
              "                           7      0.006765\n",
              "                           8      0.207111\n",
              "                           9      0.000745\n",
              "                           10     0.009317\n",
              "                           11     0.044153\n",
              "                           12     0.007175\n",
              "                           13     0.010088\n",
              "                           14     0.002769\n",
              "                           15     0.011435\n",
              "                           16     0.017867\n",
              "                           17     0.001051\n",
              "                           18     0.005681\n",
              "                           19     0.002914\n",
              "                           20     0.004636\n",
              "Stay_In_Current_City_Years 0      0.135252\n",
              "                           1      0.352358\n",
              "                           2      0.185137\n",
              "                           3      0.173224\n",
              "                           4+     0.154028"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aa5c046c-1a53-4c69-8167-9735ad96aa35\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>value</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>variable</th>\n",
              "      <th>value</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"7\" valign=\"top\">Age</th>\n",
              "      <th>0-17</th>\n",
              "      <td>0.027455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18-25</th>\n",
              "      <td>0.181178</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26-35</th>\n",
              "      <td>0.399200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36-45</th>\n",
              "      <td>0.199999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46-50</th>\n",
              "      <td>0.083082</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51-55</th>\n",
              "      <td>0.069993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55+</th>\n",
              "      <td>0.039093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">City_Category</th>\n",
              "      <th>A</th>\n",
              "      <td>0.268549</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>B</th>\n",
              "      <td>0.420263</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>C</th>\n",
              "      <td>0.311189</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">Gender</th>\n",
              "      <th>F</th>\n",
              "      <td>0.246895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>M</th>\n",
              "      <td>0.753105</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">Marital_Status</th>\n",
              "      <th>0</th>\n",
              "      <td>0.590347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.409653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"21\" valign=\"top\">Occupation</th>\n",
              "      <th>0</th>\n",
              "      <td>0.126599</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.086218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.048336</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.032087</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.131453</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0.022137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.037005</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0.107501</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0.002811</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0.011437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0.023506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0.021063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0.056682</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0.014049</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0.049647</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>0.022115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0.046123</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0.072796</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0.012039</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0.015382</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0.061014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"20\" valign=\"top\">Product_Category</th>\n",
              "      <th>1</th>\n",
              "      <td>0.255201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.043384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.036746</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.021366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0.274390</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.037206</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0.006765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0.207111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0.000745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0.009317</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0.044153</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0.007175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0.010088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0.002769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>0.011435</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0.017867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0.001051</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0.005681</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0.002914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0.004636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">Stay_In_Current_City_Years</th>\n",
              "      <th>0</th>\n",
              "      <td>0.135252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.352358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.185137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.173224</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4+</th>\n",
              "      <td>0.154028</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa5c046c-1a53-4c69-8167-9735ad96aa35')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-aa5c046c-1a53-4c69-8167-9735ad96aa35 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-aa5c046c-1a53-4c69-8167-9735ad96aa35');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-60a77034-d3d1-4909-8aae-ad07462a1e7d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-60a77034-d3d1-4909-8aae-ad07462a1e7d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-60a77034-d3d1-4909-8aae-ad07462a1e7d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"'value'])[['value']]\",\n  \"rows\": 60,\n  \"fields\": [\n    {\n      \"column\": \"value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15501672229668337,\n        \"min\": 0.0007453623915588618,\n        \"max\": 0.7531050706458111,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          0.027454787408102272,\n          0.0699931644814823,\n          0.04338372710283092\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 69
        }
      ],
      "source": [
        "categorical_cols = ['Gender', 'Age', 'Occupation', 'City_Category',\n",
        "'Stay_In_Current_City_Years', 'Marital_Status', 'Product_Category']\n",
        "df[categorical_cols].melt().groupby(['variable',\n",
        "'value'])[['value']].count()/len(df)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 70,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "mw5kfIXZUEk-",
        "outputId": "6f9a95b2-fe1b-4932-8c35-58dc9f4575ad"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                     value\n",
              "variable                   value          \n",
              "Age                        0-17   0.027455\n",
              "                           18-25  0.181178\n",
              "                           26-35  0.399200\n",
              "                           36-45  0.199999\n",
              "                           46-50  0.083082\n",
              "                           51-55  0.069993\n",
              "                           55+    0.039093\n",
              "City_Category              A      0.268549\n",
              "                           B      0.420263\n",
              "                           C      0.311189\n",
              "Gender                     F      0.246895\n",
              "                           M      0.753105\n",
              "Marital_Status             0      0.590347\n",
              "                           1      0.409653\n",
              "Occupation                 0      0.126599\n",
              "                           1      0.086218\n",
              "                           2      0.048336\n",
              "                           3      0.032087\n",
              "                           4      0.131453\n",
              "                           5      0.022137\n",
              "                           6      0.037005\n",
              "                           7      0.107501\n",
              "                           8      0.002811\n",
              "                           9      0.011437\n",
              "                           10     0.023506\n",
              "                           11     0.021063\n",
              "                           12     0.056682\n",
              "                           13     0.014049\n",
              "                           14     0.049647\n",
              "                           15     0.022115\n",
              "                           16     0.046123\n",
              "                           17     0.072796\n",
              "                           18     0.012039\n",
              "                           19     0.015382\n",
              "                           20     0.061014\n",
              "Product_Category           1      0.255201\n",
              "                           2      0.043384\n",
              "                           3      0.036746\n",
              "                           4      0.021366\n",
              "                           5      0.274390\n",
              "                           6      0.037206\n",
              "                           7      0.006765\n",
              "                           8      0.207111\n",
              "                           9      0.000745\n",
              "                           10     0.009317\n",
              "                           11     0.044153\n",
              "                           12     0.007175\n",
              "                           13     0.010088\n",
              "                           14     0.002769\n",
              "                           15     0.011435\n",
              "                           16     0.017867\n",
              "                           17     0.001051\n",
              "                           18     0.005681\n",
              "                           19     0.002914\n",
              "                           20     0.004636\n",
              "Stay_In_Current_City_Years 0      0.135252\n",
              "                           1      0.352358\n",
              "                           2      0.185137\n",
              "                           3      0.173224\n",
              "                           4+     0.154028"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-708c9e16-1bd9-4773-91ce-78722c7676da\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>value</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>variable</th>\n",
              "      <th>value</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"7\" valign=\"top\">Age</th>\n",
              "      <th>0-17</th>\n",
              "      <td>0.027455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18-25</th>\n",
              "      <td>0.181178</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26-35</th>\n",
              "      <td>0.399200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36-45</th>\n",
              "      <td>0.199999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46-50</th>\n",
              "      <td>0.083082</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51-55</th>\n",
              "      <td>0.069993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55+</th>\n",
              "      <td>0.039093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">City_Category</th>\n",
              "      <th>A</th>\n",
              "      <td>0.268549</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>B</th>\n",
              "      <td>0.420263</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>C</th>\n",
              "      <td>0.311189</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">Gender</th>\n",
              "      <th>F</th>\n",
              "      <td>0.246895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>M</th>\n",
              "      <td>0.753105</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">Marital_Status</th>\n",
              "      <th>0</th>\n",
              "      <td>0.590347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.409653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"21\" valign=\"top\">Occupation</th>\n",
              "      <th>0</th>\n",
              "      <td>0.126599</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.086218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.048336</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.032087</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.131453</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0.022137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.037005</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0.107501</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0.002811</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0.011437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0.023506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0.021063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0.056682</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0.014049</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0.049647</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>0.022115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0.046123</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0.072796</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0.012039</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0.015382</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0.061014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"20\" valign=\"top\">Product_Category</th>\n",
              "      <th>1</th>\n",
              "      <td>0.255201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.043384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.036746</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.021366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0.274390</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.037206</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0.006765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0.207111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0.000745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0.009317</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0.044153</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0.007175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0.010088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0.002769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>0.011435</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0.017867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0.001051</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0.005681</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0.002914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0.004636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">Stay_In_Current_City_Years</th>\n",
              "      <th>0</th>\n",
              "      <td>0.135252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.352358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.185137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.173224</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4+</th>\n",
              "      <td>0.154028</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-708c9e16-1bd9-4773-91ce-78722c7676da')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-708c9e16-1bd9-4773-91ce-78722c7676da button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-708c9e16-1bd9-4773-91ce-78722c7676da');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6bd564c7-7a56-4741-bd4b-65c7fc89b7a7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6bd564c7-7a56-4741-bd4b-65c7fc89b7a7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6bd564c7-7a56-4741-bd4b-65c7fc89b7a7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_58647887-4857-4c0b-bb3b-69bb694e740d\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_melted')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_58647887-4857-4c0b-bb3b-69bb694e740d button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_melted');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_melted",
              "summary": "{\n  \"name\": \"df_melted\",\n  \"rows\": 60,\n  \"fields\": [\n    {\n      \"column\": \"value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15501672229668337,\n        \"min\": 0.0007453623915588618,\n        \"max\": 0.7531050706458111,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          0.027454787408102272,\n          0.0699931644814823,\n          0.04338372710283092\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 70
        }
      ],
      "source": [
        "categorical_cols = ['Gender', 'Age', 'Occupation', 'City_Category',\n",
        "'Stay_In_Current_City_Years', 'Marital_Status', 'Product_Category']\n",
        "df_melted = df[categorical_cols].melt().groupby(['variable',\n",
        "'value'])[['value']].count()/len(df)\n",
        "df_melted\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 71,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 388
        },
        "id": "0Q7j4jdgYHnr",
        "outputId": "4f14f01e-1af1-4a57-8776-f052fc8c6a8d"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure(figsize=(6,4))\n",
        "sns.histplot(data=df,x=\"Purchase\",kde=True)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 71,
      "metadata": {
        "id": "d38X2FoiYMuR"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 72,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 353
        },
        "id": "K5Lpu4fkdkyj",
        "outputId": "bc026c39-28dc-4c6f-ad0e-2b3cec411a1a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure(figsize=(6,4))\n",
        "sns.boxplot(data=df,y=\"Purchase\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 72,
      "metadata": {
        "id": "zdG3VpUiijwM"
      },
      "outputs": [],
      "source": [
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 72,
      "metadata": {
        "id": "pmLuT7PbjbuN"
      },
      "outputs": [],
      "source": [
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 73,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 867
        },
        "id": "K4pDbeCxe2pb",
        "outputId": "16690fff-5efb-43c4-e55c-eb4941fe2610"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:matplotlib.legend:No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x1000 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig,axs=plt.subplots(nrows=2,ncols=2,figsize=(12,10))\n",
        "sns.countplot(data=df, x=\"Gender\", ax=axs[0, 0])\n",
        "sns.countplot(data=df, x=\"Occupation\",ax=axs[0, 1])\n",
        "sns.countplot(data=df, x=\"City_Category\", ax=axs[1, 0])\n",
        "sns.countplot(data=df, x=\"Marital_Status\", ax=axs[1, 1])\n",
        "plt.legend()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 74,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 465
        },
        "id": "o9W7gV78f2-x",
        "outputId": "baf71c42-16b3-4123-86bf-af49b206b7fc"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure(figsize=(12, 5))\n",
        "sns.countplot(data=df, x='Product_Category')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 75,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "eldWwYHekSPh",
        "outputId": "236222c6-6a3d-4b2b-ea88-3095106dea7a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-75-e5b750f1d428>:10: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.countplot(data=df, x=category, ax=axs[row_index, col_index], palette=[color])\n",
            "<ipython-input-75-e5b750f1d428>:10: UserWarning: \n",
            "The palette list has fewer values (1) than needed (2) and will cycle, which may produce an uninterpretable plot.\n",
            "  sns.countplot(data=df, x=category, ax=axs[row_index, col_index], palette=[color])\n",
            "<ipython-input-75-e5b750f1d428>:10: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.countplot(data=df, x=category, ax=axs[row_index, col_index], palette=[color])\n",
            "<ipython-input-75-e5b750f1d428>:10: UserWarning: \n",
            "The palette list has fewer values (1) than needed (21) and will cycle, which may produce an uninterpretable plot.\n",
            "  sns.countplot(data=df, x=category, ax=axs[row_index, col_index], palette=[color])\n",
            "<ipython-input-75-e5b750f1d428>:10: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.countplot(data=df, x=category, ax=axs[row_index, col_index], palette=[color])\n",
            "<ipython-input-75-e5b750f1d428>:10: UserWarning: \n",
            "The palette list has fewer values (1) than needed (3) and will cycle, which may produce an uninterpretable plot.\n",
            "  sns.countplot(data=df, x=category, ax=axs[row_index, col_index], palette=[color])\n",
            "<ipython-input-75-e5b750f1d428>:10: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.countplot(data=df, x=category, ax=axs[row_index, col_index], palette=[color])\n",
            "<ipython-input-75-e5b750f1d428>:10: UserWarning: \n",
            "The palette list has fewer values (1) than needed (2) and will cycle, which may produce an uninterpretable plot.\n",
            "  sns.countplot(data=df, x=category, ax=axs[row_index, col_index], palette=[color])\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x1000 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "# Define a dictionary to map each category to a color\n",
        "category_colors = {\"Gender\": \"blue\", \"Occupation\": \"green\", \"City_Category\": \"red\", \"Marital_Status\": \"orange\"}\n",
        "fig, axs = plt.subplots(nrows=2, ncols=2, figsize=(12, 10))\n",
        "# Iterate over each category and its corresponding color\n",
        "for i, (category, color) in enumerate(category_colors.items()):\n",
        "    row_index = i // 2\n",
        "    col_index = i % 2\n",
        "    sns.countplot(data=df, x=category, ax=axs[row_index, col_index], palette=[color])\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 78,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VjXrQ119mqMj",
        "outputId": "52aecd45-6a05-4b0c-8fa5-f62d24cbb874"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 550068 entries, 0 to 550067\n",
            "Data columns (total 10 columns):\n",
            " #   Column                      Non-Null Count   Dtype \n",
            "---  ------                      --------------   ----- \n",
            " 0   User_ID                     550068 non-null  int64 \n",
            " 1   Product_ID                  550068 non-null  object\n",
            " 2   Gender                      550068 non-null  object\n",
            " 3   Age                         550068 non-null  object\n",
            " 4   Occupation                  550068 non-null  object\n",
            " 5   City_Category               550068 non-null  object\n",
            " 6   Stay_In_Current_City_Years  550068 non-null  object\n",
            " 7   Marital_Status              550068 non-null  object\n",
            " 8   Product_Category            550068 non-null  object\n",
            " 9   Purchase                    550068 non-null  int64 \n",
            "dtypes: int64(2), object(8)\n",
            "memory usage: 42.0+ MB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig,axs = plt.subplots(nrows=1,ncols=2,figsize=(15,5))\n",
        "sns.histplot(data=df[df[\"Gender\"]==\"M\"][\"Purchase\"],ax=axs[0]).set_title(\"Male_spending\")\n",
        "sns.histplot(data=df[df[\"Gender\"]==\"F\"][\"Purchase\"],ax=axs[1]).set_title(\"FeMale_spending\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "eaGDWTxO6XQe",
        "outputId": "fc485c34-68f9-4dc0-d4dd-3516118810f5"
      },
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(15, 5))\n",
        "sns.histplot(data=df[df[\"Gender\"]==\"M\"][\"Purchase\"], ax=axs[0], color=\"b\").set_title(\"Male Spending\")\n",
        "sns.histplot(data=df[df[\"Gender\"]==\"F\"][\"Purchase\"], ax=axs[1], color=\"r\").set_title(\"Female Spending\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "jLO1H0dW-zEF",
        "outputId": "313a81d6-00bb-4112-cee2-a6d73d916dc7"
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "colors = [\"skyblue\", \"salmon\"]\n",
        "plt.title(\"Purchase vs Gender\",fontsize=15)\n",
        "plt.figure(figsize=(10, 5))\n",
        "sns.boxplot(data=df, x=\"Gender\", y=\"Purchase\", palette=colors)  # Use a list of colors for palette\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 992
        },
        "id": "HYtdNE-IETEH",
        "outputId": "19371229-5ed5-4f09-e4e1-3eb8f28925c7"
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-84-1f1d09099d94>:4: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, x=\"Gender\", y=\"Purchase\", palette=colors)  # Use a list of colors for palette\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAi4AAAG1CAYAAADeA3/CAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAtC0lEQVR4nO3de1zUdaL/8fcwMgOaoIaCGEpZZqaCeSG8ZBpGq1muWXhZJS95KrfTxrYlmZJrSVdzT1KWZfnYk6t20dMmD8o4UWns2qKcRxcvmZqejqBmgmGBMJ/fH/2YGhmUIRA/8no+HvMHn/l85/sZvmO8mst3HMYYIwAAAAsENfUCAAAA6opwAQAA1iBcAACANQgXAABgDcIFAABYg3ABAADWIFwAAIA1CBcAAGANwgUAAFiDcEGz4nA4fC5BQUFq06aNhgwZohdffFFn24mk8/Ly5HA4dOuttzb1Us5Zx48f13/8x3/o2muvVceOHeV2u9W6dWv16NFDt956q9566y1VVVU19TL9euWVV+RwOPTQQw819VKAM6ZFUy8AaAqpqamSpKqqKn311VfatGmTNm7cqNzcXP3tb39r4tXhTNm0aZNuvvlmHThwQCEhIerfv7+io6NVXl6ur776SitWrNCKFSvUo0cPff755029XAAiXNBMvfLKKz4/b9iwQSNHjtSqVas0adIkXX/99U2zMJwxW7Zs0TXXXKPy8nL96U9/0oMPPqiwsDCfOfv379eiRYu0dOnSJlolgJPxUhEgacSIEZo8ebIkad26dU27GDQ6j8ej3/3udyovL9eCBQv0+OOP14gWSYqJidHTTz+tjRs3NsEqAfhDuAD/X58+fST99H/ZkrR37145HA5dffXVfuc/9NBDcjgcNZ69iY2NlcPhkDFGzzzzjOLi4tSyZUvFx8d755w4cUJLly7V4MGD1aZNG4WGhuriiy/W1KlTVVBQ4Hd/R44c0R133OF9H0bPnj21fPlyv3PXr1+vadOm6bLLLlNYWJhatWqluLg4LVy4UOXl5X63yc7O1ogRI9SpUye53W5FR0dr8ODBmj9/vt/5OTk5GjVqlNq3by+3262LLrpIaWlp+vbbb/3OP9nBgwfVokULRUdHy+Px+J3z97//XQ6HQ2PHjvWOVVRU6Nlnn1X//v11/vnnq2XLloqNjdX111+vVatW1Wnf2dnZ2rZtmzp37qz09PTTzu/bt6/f8SNHjig9PV09evRQaGiowsPDNXz4cL399ts15v7y8fTDDz9o9uzZ6tKli9xuty6++GI99thjtb7HatOmTUpKSlLr1q3Vpk0bJScn65///Ocp11xZWannnntOiYmJCgsLU2hoqOLj47V48WJVVlbWmF+Xxy1wVjBAMyLJ1Pawf+SRR4wkM3r0aGOMMXv27DGSzNChQ/3Oz8jIMJLMyy+/7DPepUsXI8nMnDnTBAcHm6SkJJOSkmJ++9vfGmOM+f77781VV11lJJlWrVqZ5ORkk5KSYhISEkxwcLC5++67vbf1/vvvG0nmxhtvNN26dTPR0dHm5ptvNsOGDTNOp9NIMsuWLauxtsjISBMWFmYGDhxobrnlFpOcnGzatm1rJJnhw4ebyspKn/lLliwxkozT6TRXXXWVmTBhghkxYoS54IIL/P6+7r//fiPJuFwuM2jQIDNu3DhzySWXGEmma9eupqioqLZD4OO6664zksx7773n9/qUlBQjybzxxhvesXHjxhlJpnXr1mbkyJFm/PjxZsiQISY8PLzWY3WyO++800gyf/zjH+s0358dO3aYmJgYI8nExsaaG2+80QwfPty0bNnSSDJPPPGEz/zqx1NiYqIZPHiwadeunRk7dqxJTk42ISEhRpKZM2dOjf38/e9/Ny1atDCSzIABA8z48ePNZZddZlwul5k5c6aRZDIyMny2OX78uBk2bJiRZNq1a2dGjBhhRo8ebTp06GAkmRtuuMFUVVX5bHO6xy1wtiBc0KzUFi4ej8ckJib6/PH4teESERFhPvvssxrbTZ8+3UgyV111lTl48KDPdUVFReYf//iH9+fqcJFkxo8fb3788UfvdWvXrjWSTOfOnWvsY926deb48eM+Y6Wlpeb66683ksyKFSt8ruvcubNxOBzmk08+qfF7ef/9933G1qxZYySZnj17mi+//NJn7rx584wkk5KSUmNN/vz1r381ksy0adNqXFdaWmpCQ0NNeHi4937v3r3bSDJdunQxhw8f9pn/ww8/mI8//rhO+x00aJCRZP7zP/+zTvNPVllZaXr16mUkmccff9wnAr788ktz4YUXGqfTaT799FPvePXjqfoxVVJS4r3uk08+MU6n07Rs2dIcO3bM53fQvn17I8ksX77cO+7xeLzx6C9cqsMsJSXFHD161Of2Ro4caSSZ5557zmeb0z1ugbMF4YJm5eRwqaysNDt37jS33nqrkWTcbrfZtWuXMebXh8vJ/8dtjDHffPONcTqdxu12m7179552vdXhEhYWVuMPtTHG9OzZ00gye/bsOe1tGfPTH1VJZuzYsT7joaGhpm3btnW6jbi4OCPJ549yNY/HY+Lj443T6TSHDh067W19//33plWrVj5xUm3FihVGkpk+fbp37J///KeRZMaMGVOntdame/fuRpLJycnxe/20adNMamqqz+Wjjz7yXl8djTfddJPf7d98800jyfz7v/+7d6z68RQUFGS2b99eY5vqqPxlKC5fvtwbuSerqKjwPiP2y3ApLi42wcHBJiYmpka8GmPMgQMHjMvlMr179/YZP9XjFjib8KkiNEsOh6PGWOvWrbVixQp17dq1QfZxww031BjLy8tTVVWVrr/+enXp0qXOt9W3b1+df/75Nca7deumzz77TAcOHFBsbKzPdV9++aWys7O1a9culZWVyePxeN9D8eWXX9a4/Y0bN2r69OlKS0vT5Zdf7ncdBw8e1P/8z//okksuUc+ePWtc73A4NGjQIBUWFqqgoEDJycmnvF+tWrXSjTfeqJUrV2r9+vU+72V59dVXJUm/+93vvGPdu3dXq1attH79ej3xxBOaNGmSoqOjT7mP+lixYkWNc7dcffXVGjx4sCTp3XfflSSf9f7SkCFDJEmbN2+ucV2XLl106aWX1hjv1q2bJOnAgQPesY8++kiSNH78+Brzg4ODNW7cOC1evNhnPC8vTydOnNB1112n0NDQGttFRUXpkksu0aeffqoffvihxhx/j1vgbEK4oFmqPo9LUFCQwsLC1KtXL40dO1Zt27ZtsH107ty5xlj1G38DjaMLLrjA73jr1q0lyecNt8YY3XvvvXr66adrfbPnsWPHfH7OysrSmDFjtHz5ci1fvlyRkZEaOnSoxo4dq3HjxsnpdEr66Q2m0k/h4y/+funw4cN1um+TJk3SypUr9eqrr3pDoLi4WLm5ubrgggt01VVXeeeGhYVp2bJlmjlzpu677z7dd9996tatm4YNG6bJkydr0KBBddpndQTWtsZfvnn19ttv1/PPP+9zffXvYdKkSZo0aVKt+/F3+4Ecy//7v/+TpFoj9+RY/eXali1bpmXLltW6NumnNxd36tTJZ8zf4xY4mxAuaJZO/iRQfdT2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nDlztHTp0qZeWrOTl5enhQsX6tlnn9WWLVv05ptvav369VqwYEFTLw311OTPuERERMjpdKq4uNhnvLi4WFFRUX63iYqKCmg+6qY+x6Lak08+qUcffVTvvfeeevfu3ZjLbBYCPRZfffWV9u7dq9GjR3vHPB6PJKlFixbasWOHunbt2riLPkfV599Fx44dFRwcLKfT6R277LLLVFRUpIqKCrlcrkZd87mqPsdi7ty5mjx5smbMmCFJ6tWrl8rKyjRz5kzNmTPH50uB0bhq+9sdFhZW52dbpLPgGReXy6W+ffsqNzfXO+bxeJSbm6vExES/2yQmJvrMl6QNGzbUOh91U59jIUmPP/64FixYoJycHPXr1+9MLPWcF+ix6N69uz799FMVFhZ6LzfccIOGDRumwsJCxcTEnMnln1Pq8+9i0KBB2rVrlzceJWnnzp3q2LEj0fIr1OdYHD9+vEacVAel4TuGz6gG+9sd2PuGG8eqVauM2+02r7zyivniiy/MzJkzTZs2bUxRUZExxpjJkyeb2bNne+dv2rTJtGjRwjz55JNm27ZtJiMjg49DN5BAj8Wjjz5qXC6Xef31182BAwe8l2PHjjXVXThnBHosTsanihpOoMdi3759pnXr1ub3v/+92bFjh3n77bdNhw4dzMMPP9xUd+GcEeixyMjIMK1btzZ/+9vfzO7du827775runbtam655ZamugvnjGPHjpmtW7earVu3Gklm0aJFZuvWrebrr782xhgze/ZsM3nyZO/86o9D/+lPfzLbtm0zWVlZ9n4c2hhjnnnmGdO5c2fjcrnMgAEDzD/+8Q/vdUOHDjWpqak+89esWWO6detmXC6Xufzyy8369evP8IrPXYEciy5duhhJNS4ZGRlnfuHnoED/XfwS4dKwAj0WH3/8sUlISDBut9tcdNFF5pFHHjGVlZVneNXnpkCOxYkTJ8xDDz1kunbtakJCQkxMTIy58847zXfffXfmF36Oef/99/3+97/695+ammqGDh1aY5v4+HjjcrnMRRddZF5++eWA9+swhufKAACAHZr8PS4AAAB1RbgAAABrEC4AAMAahAsAALAG4QIAAKxBuAAAAGsQLgAAwBqECwAAsAbhAgAArEG4AAAAaxAuAADAGv8PsgvR4yPbrcsAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "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mZo3b66uXbuqZ8+euuuuu1w+YywsLEybNm1SVlaW2rdvr9GjR2vChAkun1V25513avny5Vq4cKHatGmj9957T2vWrNGtt95adRcDAAAAgNcxOqlHly5d5HA4Lrp/48aNlz1GRESEli9ffsma1q1b69NPP71kTd++fdW3b9/Lng8AAAAAPOWaeoYMAAAAAGoSAhkAAAAAGEIgAwAAAABDCGQAAAAAYAiBDAAAAAAMIZABAAAAgCEEMgAAAAAwhEAGAAAAAIYQyAAAAADAkKsKZEePHtXGjRt15swZSZLD4fBIUwAAAADgDdwKZD///LPi4+N18803q2fPnjpx4oQkaciQIRo9erRHGwQAAACAmsqtQDZq1Cj5+/srOztb1113nXP7ww8/rA0bNnisOQAAAACoyfzd+aZNmzZp48aNql+/vsv2m266Sd9//71HGgMAAACAms6tEbKioiKXkbEK+fn5slgsV90UAAAAAHgDtwJZ586dtXTpUue6j4+PysvLNXXqVN17770eaw4AAAAAajK3blmcOnWqunbtqt27d6ukpERjxozRoUOHlJ+fr+3bt3u6RwAAAACokdwaIbv11lv1zTff6K677tL999+voqIiPfjgg9qzZ4+aNGni6R4BAAAAoEZya4RMksLCwjRu3DhP9gIAAAAAXsWtEbINGzbos88+c67PnTtXbdu21aOPPqpffvnFY80BAAAAQE3mViBLSUmR3W6XJB04cEDJycnq2bOnsrKylJyc7NEGAQAAAKCmcuuWxaysLLVs2VKS9I9//EO9e/fWlClT9OWXX6pnz54ebRAAAAAAaiq3RsgCAwP166+/SpI+/vhjdevWTZIUERHhHDkDAAAAAFyaWyNkd911l5KTk9WpUyft2rVLK1eulCR98803ql+/vkcbBAAAAICayq0Rsjlz5sjf31/vvfee5s+frxtuuEGS9NFHH6l79+4ebRAAAAAAaiq3RsgaNGigtWvXnrd9xowZV90QAAAAAHgLtz+HrMLZs2dVUlLiss1qtV7tYQEAAACgxnPrlsWioiIlJSWpXr16CgkJ0fXXX++yAAAAAAAuz61ANmbMGG3evFnz58+XxWLRW2+9pUmTJik6OlpLly71dI8AAAAAUCO5dcvihx9+qKVLl6pLly4aPHiwOnfurKZNm6phw4ZatmyZ+vfv7+k+AQAAAKDG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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cmap=\"husl\"\n",
        "plt.figure(figsize=(10,5))\n",
        "sns.boxplot(data=df, x=\"Age\" ,y=\"Purchase\", palette=cmap)\n",
        "plt.title(\"Purchase vs Age\",fontsize=15)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 576
        },
        "id": "zJLObBmXBRrY",
        "outputId": "8ee0c04e-a57c-4845-b5ad-c1b0c8be1b3f"
      },
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-85-3d31ab0324bc>:3: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, x=\"Age\" ,y=\"Purchase\", palette=cmap)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cmap=\"husl\"\n",
        "plt.figure(figsize=(10,5))\n",
        "sns.boxplot(data=df, x=\"Occupation\" ,y=\"Purchase\", palette=cmap)\n",
        "plt.title(\"Purchase vs Occupation\",fontsize=15)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 576
        },
        "id": "ckC65cVwDKOA",
        "outputId": "e8446f94-0e2e-4cb7-c2fa-6c25163aacda"
      },
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-86-c2a833abfd80>:3: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, x=\"Occupation\" ,y=\"Purchase\", palette=cmap)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cmap=\"husl\"\n",
        "plt.figure(figsize=(10,5))\n",
        "sns.boxplot(data=df, x=\"City_Category\" ,y=\"Purchase\", palette=cmap)\n",
        "plt.title(\"Purchase vs City_Category\",fontsize=15)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 576
        },
        "id": "_hJwAJLMH53g",
        "outputId": "8b9ef6b1-ca13-4f5f-9966-150e55a4f372"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-87-d6bae8503ea5>:3: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, x=\"City_Category\" ,y=\"Purchase\", palette=cmap)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "cmap=\"husl\"\n",
        "plt.figure(figsize=(10,5))\n",
        "sns.boxplot(data=df, x=\"Stay_In_Current_City_Years\" ,y=\"Purchase\", palette=cmap)\n",
        "plt.title(\"Purchase vs Stay_In_Current_City_Years\",fontsize=15)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 576
        },
        "id": "WAizYhYIIRzL",
        "outputId": "372e9b64-bd63-4675-cc24-aa4f96e18375"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-88-178b37755551>:3: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, x=\"Stay_In_Current_City_Years\" ,y=\"Purchase\", palette=cmap)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cmap=\"husl\"\n",
        "plt.figure(figsize=(10,5))\n",
        "sns.boxplot(data=df, x=\"Marital_Status\" ,y=\"Purchase\", palette=cmap)\n",
        "plt.title(\"Purchase vs Marital_Status\",fontsize=15)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 576
        },
        "id": "FGMZKpknIgTZ",
        "outputId": "8d9fdf90-da54-4815-831e-f3234a637e23"
      },
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-89-752b2b423312>:3: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, x=\"Marital_Status\" ,y=\"Purchase\", palette=cmap)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cmap=\"husl\"\n",
        "attr = ['Gender', 'Age', 'Occupation', 'City_Category', 'Stay_In_Current_City_Years', 'Marital_Status']\n",
        "fig, axs = plt.subplots(nrows=3, ncols=2, figsize=(18, 10))\n",
        "fig.subplots_adjust(top=1.3)\n",
        "count = 0\n",
        "for row in range(3):\n",
        "    for col in range(2):\n",
        "        sns.boxplot(data=df, y='Purchase', x=attr[count], ax=axs[row, col],palette=cmap)\n",
        "        axs[row,col].set_title(f\"Purchase vs {attr[count]}\")\n",
        "        count += 1\n",
        "plt.show()\n",
        "\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.boxplot(data=df, y='Purchase', x='Product_Category')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4oxjhuOrI_-Q",
        "outputId": "e3908271-eaa3-450f-92f8-98e01523a980"
      },
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-90-9ecae010a000>:8: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, y='Purchase', x=attr[count], ax=axs[row, col],palette=cmap)\n",
            "<ipython-input-90-9ecae010a000>:8: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, y='Purchase', x=attr[count], ax=axs[row, col],palette=cmap)\n",
            "<ipython-input-90-9ecae010a000>:8: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, y='Purchase', x=attr[count], ax=axs[row, col],palette=cmap)\n",
            "<ipython-input-90-9ecae010a000>:8: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, y='Purchase', x=attr[count], ax=axs[row, col],palette=cmap)\n",
            "<ipython-input-90-9ecae010a000>:8: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, y='Purchase', x=attr[count], ax=axs[row, col],palette=cmap)\n",
            "<ipython-input-90-9ecae010a000>:8: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(data=df, y='Purchase', x=attr[count], ax=axs[row, col],palette=cmap)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x1000 with 6 Axes>"
            ],
            "image/png": "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9+Iw75qboxMAkH0tWrRQVFSU1brixYs7KBsAuDeCgoI0f/58TZgwQV5eXpKka9euad68eSpTpoyDswOAe2vBggWKjIzUtGnT1KBBA02cOFHh4eE6fPiw/P39bT4nOTlZ7du3V0hIiGbOnJlhe8eOHdWiRQurdREREbp27Vqm+8wPatSooZ9++smy7OZm/XG5Z8+eGj16tGW5YMGCme5r/fr1ioiI0PHjx+2eZ27y888/q3///nrwwQeVkpKiYcOGqXnz5jp48KC8vb0l/VsEa9GihYYOHarPPvtMbm5u2rNnj1xcMh/v5+LiojZt2ujdd99V8eLF9ccff6h///66cOGC5s2bZxV7+PBh+fr6Wpbz+jm+fft2ff7556pVq5bV+uy0c7qoqCira8aNX8xFR0erVatW6tOnj+bOnas1a9aoR48eKlmypMLDw+12XM7kVteKK1euqEWLFpa2vhO3aud0+eV8Ll26tD744ANVqlRJhmHoiy++UJs2bbRr1y7VqFHjrs5nSerevbtq1aqlv//+2+b2/NLOkpSYmKjatWurW7duevrppzNsj4yM1Nq1azVnzhyVK1dOq1atUr9+/RQYGKgnn3zS5j4PHTqktLQ0ff7556pYsaL279+vnj17KjExUR9//LFV7E8//aQaNWpYlosWLWrfA7QTCuhALubh4aGAgABHpwEA99QDDzygY8eOafHixercubMkafHixSpTpoyCg4MdnB0A3Fvjx49Xz5491bVrV0nStGnTtHz5cs2aNUtvvPGGzeeMGjVKkjIdBerl5WX5QlKSzp07p7Vr19ostucnbm5ut+xbFyxYkL73HVq5cqXV8uzZs+Xv76+dO3eqSZMmkqRBgwbp5Zdftjqfq1Spcsv9Fi5cWH379rUsly1bVv369dNHH32UIdbf399mITIvSkhIUOfOnfWf//xH7777rtW27LRzOj8/v0zP/WnTpik4OFjjxo2TJFWrVk2//vqrJkyYkGcL6Le6VqSP+l+/fv0d7/dW7Zwuv5zPrVu3tlp+7733NHXqVG3ZskU1atS4q/N56tSpunTpkoYPH55hVHu6/NLOktSyZUu1bNky0+2bNm1Sly5dFBoaKknq1auXPv/8c23bti3TAnr6l0jpypcvr8OHD2vq1KkZCuhFixbNFX9bmcIFAAA4vW7duln94mbWrFmWYhIA5FXJ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paUpKSkp29eNb775xmpaoe3bt6tbt2765ZdfLF+E2pLf2vlG169f1/Xr1zPMF+/q6mq55mbWF/n777/1yCOPqG7duoqKirrlnPPpnLmtKaADAIBcwdXVVb///rvl3wCQH0RGRqpLly6qV6+e6tevr4kTJyoxMfGWN1KOiYnRhQsXFBMTo9TUVEuxt2LFivLx8bHELViwQCkpKczlLem1115T69atVbZsWZ06dUojRoyQq6urnn32WR07dkzz5s3T448/rqJFi2rv3r0aNGiQmjRpolq1ajk6dafWv39/zZs3T999950KFSpkmbvfbDbLy8tLJpNJgwcP1ogRI1S7dm3VqVNHX3zxhQ4dOmQZJWrLihUrdObMGT344IPy8fHRgQMHNHjwYDVs2FDlypWTJE2cOFHBwcGqUaOGrl27phkzZmjt2rVatWpVThx6jipUqJBlXvl03t7eKlq0qGV9dtp56dKlOnPmjB566CF5enpq9erVev/9961Gm/bp00eTJk3SkCFD1K1bN61du1YLFy7U8uXL783BOtitrhXSv3PCx8bGWkak79u3T4UKFVKZMmVs3kBRylo756fzWZKGDh2qli1bqkyZMrp8+bLmzZun9evX68cff8z2dePmIvk///wj6d+R635+fpLyXztL/34JdOMvKKKjo7V7924VKVJEZcqUUdOmTTV48GB5eXmpbNmy+vnnn/Xll19q/Pjxme7z77//VmhoqMqWLauPP/5Y586ds2wLCAiQJH3xxRdyd3fX/fffL0lavHixZs2aZXUvC6fi6DlkAGTPjfMCA0BedbtrHXOgA8gPPvvsM6NMmTKGu7u7Ub9+fWPLli23jO/SpYshKcNj3bp1VnEhISHGc889dw8zzz06duxolCxZ0nB3dzdKlSpldOzY0TK/eUxMjNGkSROjSJEihoeHh1GxYkVj8ODBRlxcXKb7W7dunVG2bNkcyt552ToPJRlRUVFWcWPGjDFKly5tFCxY0AgJCTF++eWXW+537dq1RkhIiGE2mw1PT0+jUqVKxuuvv241l/HYsWONChUqGJ6enkaRIkWM0NBQY+3atffgKJ3TjXOgp7vTdv7hhx+MOnXqGD4+Poa3t7dRu3ZtY9q0aUZqaqpV3Lp164w6deoY7u7uRvny5TO8v3nJra4VhmEYI0aMyNI5f6OstHN+O5+7detmlC1b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67fffpObW/74U8S5BAAA8iP67M7r66+/1ujRo/XMM89o3rx5VsXxwYMH68cff9T169clyfIrgpw2btw4zZ49WwMHDtT48eNlMpks295880199dVXefbzhGEYunbtmry8vBydCpDvMYULgDzj0UcflSRFR0dLynzO6YiICKvRwenz+X388ceaOHGiKlSoIA8PDx08eFCSdOjQIXXo0EHFixeXl5eXqlSpojfffDPDfi9duqSIiAj5+fnJbDara9euunLlilVMVFSUHn30Ufn7+8vDw0PVq1fX1KlTM+xrx44dCg8PV7FixeTl5aXg4GB169bNKiYtLU0TJ05UjRo15OnpqRIlSqh37966ePHiLdvp448/lslk0okTJzJsGzp0qNzd3S37OHr0qNq1a6eAgAB5enqqdOnS6tSpk+Li4m75GqNGjVLhwoU1ffp0q+K5JNWvX1+vv/669u3bp6+//tpq29atW/X444+rcOHC8vb2Vq1atfTJJ59Yxdzu/bj5/U2XPu/ljUwmkwYMGKC5c+eqSpUq8vT0VN26dbVhwwaruBMnTqhfv36qUqWKvLy8VLRoUbVv395qqpbZs2erffv2kqRHHnnE8nPl9evXS7J9Pp49e1bdu3dXiRIl5Onpqdq1a+uLL76wirnx/Jw+fbrl/HzwwQe1ffv2DMcJAADgzOizO0+f/e2331aRIkU0a9Ysq+J5uvDwcD3xxBOSMs6BHhERocmTJ0uS1VQ9hmGoXLlyatOmTYb9Xbt2TWazWb17975lXumuXr2qMWPGqGrVqpb2uNkLL7yg+vXrS5IuXLig1157TTVr1pSPj498fX3VsmVL7dmzxxK/fv16Pfjgg5Kkrl27WvK+cW73rVu3qkWLFjKbzSpYsKCaNm2qjRs3Znjt9evXq169evL09FSFChX0+eef2/zMkZKSonfeecdyzpYrV07Dhg1TUlKSVVy5cuX0xBNP6Mcff1S9evXk5eWlzz//XE2bNlXt2rVttlGVKlUUHh6epfYEkH1582s6APnSsWPHJElFixbN1vOjoqJ07do19erVSx4eHipSpIj27t2rxo0bq0CBAurVq5fKlSunY8eOaenSpXrvvfesnt+hQwcFBwdrzJgx+u233zRjxgz5+/tr7NixlpipU6eqRo0aevLJJ+Xm5qalS5eqX79+SktLU//+/SX9W1Rt3ry5ihcvrjfeeEN+fn46fvx4hjkIe/furdmzZ6tr1656+eWXFR0drUmTJmnXrl3auHGjzU5wep5DhgzRwoULNXjwYKttCxcuVPPmzVW4cGElJycrPDxcSUlJeumllxQQEKC///5by5Yt06VLl2Q2m23u/+jRozp8+LAiIiLk6+trM+bFF1/UiBEjtGzZMnXq1EmStHr1aj3xxBMqWbKkXnnlFQUEBOj333/XsmXL9Morr0jSHb0fWfXzzz9rwYIFevnll+Xh4aEpU6aoRYsW2rZtm+677z5J0vbt27Vp0yZ16tRJpUuX1vHjxzV16lSFhobq4MGDKliwoJo0aaKXX35Zn376qYYNG6Zq1apJkuW/N7t69apCQ0P1xx9/aMCAAQoODtaiRYsUERGhS5cuWY453bx583T58mX17t1bJpNJH374oZ5++mn9+eefmb7XAAAAzoY+u/P02Q8dOqRu3bqpUKFCd/w+9O7dW6dOndLq1av11VdfWdabTCY9//zz+vDDD3XhwgUVKVLEsm3p0qWKj4/X888/n6XX+PXXX3XhwgUNHDgww6AcW/788099++23at++vYKDg3XmzBlLAfrgwYMKDAxUtWrVNHr0aA0fPly9evVS48aNJckyBczatWvVsmVL1a1bVyNGjJCLi4vlC5VffvnFUqzftWuXWrRooZIlS2rUqFFKTU3V6NGjVbx48Qx59ejRQ1988YWeeeYZvfrqq9q6davGjBmj33//XUuWLLGKPXz4sJ599ln17t1bPXv2VJUqVeTj46OePXtq//79ls8n0r+fUY4cOaK33norS+0J4C4YAJDLREVFGZKMn376yTh37pxx8uRJY/78+UbRokUNLy8v46+//jIMwzCaNm1qNG3aNMPzu3TpYpQtW9ayHB0dbUgyfH19jbNnz1rFNmnSxChUqJBx4sQJq/VpaWmWf48YMcKQZHTr1s0q5qmnnjKKFi1qte7KlSsZ8gkPDzfKly9vWV6yZIkhydi+fXumbfDLL78Ykoy5c+darV+5cqXN9TcLCQkx6tata7Vu27ZthiTjyy+/NAzDMHbt2mVIMhYtWnTLfd3s22+/NSQZEyZMuGWcr6+v8cADDxiGYRgpKSlGcHCwUbZsWePixYtWcTe2dVbej5vf33Tp79ONJBmSjB07dljWnThxwvD09DSeeuopyzpb79vmzZut2ssw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+eef18aNG9W8eXPNmTNHL774otPtVq9eXdWrV9fy5cs1ffp0pz+5XLRokSTp3nvvlSRVqVJF0pV9fb1OYE5fjxIlSig5OTnL8uu97raRJlc7cOCAihUrZv9S88knn6hfv36aMmWKPSY1NTVLntxMJRMdHa1du3YpMzPTYRT6vn377OsBAAA8HX32G3Nnn71GjRpasWKFpk+fruLFi+e6bTfq+4aFhalz585avHixevfurR9++EHTpk3L1fZbtGihEiVK6MMPP9Szzz6b7YVEP/nkE915552aP3++w/Lk5GSVKlUq23bbvpOEhITcsDAdHh6ugIAAHTp0KMu6a5dFR0crMzNTBw8etA80kqSkpCQlJyfnuM/v4+OjRx55RAsXLtQrr7yi5cuX67HHHsvRxVUB5B1TuADwWFWqVNG+ffvs03BI0s8//6wffvghR48vXbq0WrVqpXfffVcJCQkO625m1K+tc3P1Y1NSUrRgwQKHuDNnzmTZvm0EhO0noQ899JAyMjL0wgsvZMlz+fJlpwXka3Xv3l0+Pj768MMPtWzZMt17770O8+edPXtWly9fdnhM3bp15e3t7fDTVGfGjh2rM2fOaMiQIVlGD23fvl2vvPKK6tSpo+7du0uSbrvtNlWqVEnTpk3L0nbbvsjp61GlShWlpKQ4jIA/ceJElivc22zatMlhTsSjR49qxYoVateunf018/HxyfKavPXWW1mem23/5WT/d+rUSYmJifaf5EpXXru33npLxYsXV+vWrbPdBgAAQGFHn/3G3NlnnzBhgk6dOqVHH300yzYk6ZtvvtHKlSuv+/js+r59+vTRL7/8otGjR8vHx0e9evW6YXuuVaxYMT311FP69ddf9dRTTzl9PT/44ANt3bpVkvM++7Jly3Ts2LEctbthw4aqUqWKXn/9dZ0/fz5LLtt71MfHR23bttXy5ct1/Phx+/pDhw7p66+/dnhMp06dJCnLyYOpU6dKkjp37uz0uTvTp08fnTlzRv/+9791/vx5/etf/8rxYwHkDSPQAXisgQMHaurUqWrfvr0GDRqkkydPas6cOapdu7bDRYJu5M0331SLFi102223afDgwapUqZL++OMPffnll9q5c2eu2tOuXTtZLBZ16dLF3ul55513FB4erhMnTtjj3nvvPc2aNUv333+/qlSponPnzumdd95RSEiIvQPW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smSJVqxYoeDgYPt8hlarVYGBgfrtt9+0ZMkSderUSSVLltSuXbs0atQotWrVSvXq1ZMktWvXTrVq1VKfPn306quvKjExUc8//7xiYmLso0eGDBmiGTNm6Mknn9TAgQO1Zs0aLV26VF9++aW9LbGxserXr58aNWqkJk2aaNq0abpw4YIGDBiQ/zsGAAAAKKTo4wMAAMCTeBm2S8ubkfw6k7QvWLBA/fv319GjR/Wvf/1Le/bs0YULF1S+fHndf//9ev755x0u4nPkyBENHTpU69atU1BQkPr166eXX35Zvr7/d35g3bp1GjVqlH755ReVK1dOY8aMUf/+/R3yzpgxQ6+99poSExN166236s0337T/nDQ7Z8+eldVqVUpKChcYAgAA8CD083KHPj4AAAAKutz080wtoHsSOtcAAACeiX5e0cVrDwAA4Jly088zdQ50AAAAAAAAAAAKKlPnQIeUkZGhXbt26fTp0woLC1O9evXk4+NjdrPgQrzGAAAAgHtkZGRoz549OnXqlEqWLKk6derQ1wZuQnp6ur744gsdP35cUVFR6tKliywWi9nNAoACgQK6iTZs2KDx48crMzPTvszb21vjx49Xq1at3Jp7165devzxx+3333zzTftFm9ztjz/+0KBBg5SRkSEfHx/Nnz9fFStWdHveixcv6u2339aff/6pcuXK6d///rcCAwPdmnPDhg2aOHGiLl++bF/m6+ursWPHuv01NuP5StLp06cVGxtr/xIzdepUhYWFuT2vJO3Zs0fDhw+3358xY4bq1KmTL7nNYNbJGbNe48TERA0dOlTnz59X8eLFNXv2bEVGRro9r5lSUlL03HPPKSkpSREREZo0aZKsVqvb85q1r4viccssZh0/zHqNDx06pMcee0yGYcjLy0vvvPOOqlat6va8ANzru+++08SJE7MsHzt2rFq2bGlCi4DCae7cuVq2bJnDsjlz5qhHjx4aPHiwSa0CCqcXX3xR69evt99v3bq1nn/+eRNbBFdgDnQXye38iBs2bNDYsWOvu37ixIluK7C2adPmuuvWrVvnlpw2d955p5y95by8vLR27Vq35X3uuef0ww8/ZFnevHlzTZo0yS05zXyNzXi+kvTAAw/o9OnTWZaHhYXp008/dVteydz3tRmFqA0bNmjWrFlKTEy0L4uMjNSwYcPcenLGrNe4Q4cOSk1N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1+CzVPDltI/PEBoAAAAAAAAAAJyggA4AAAAAAAAAgBMU0AsAf39/jRs3Tv7+/kUir5m5yevZec3MTV7PzmtmbvJ6dl4zc5MXgKfg8w24Bp8lwDX4LHkeLiIKAAAAAAAAAIATjEAHAAAAAAAAAMAJCugAAAAAAAAAADhBAR0AAAAAAAAAACcooAMAAAAAAAAA4AQF9AJg5syZqlixogICAtS0aVNt3brV7Tk3bNigLl26KCoqSl5eXlq+fLnbc06ePFmNGzdWcHCwwsPD1a1bN+3fv9/teSVp9uzZqlevnkJCQhQSEqJmzZrp66+/zpfcNi+//LK8vLw0cuRIt+caP368vLy8HG41a9Z0e15JOnbsmP71r3+pZMmSCgwMVN26dfXjjz+6NWfFihWzPF8vLy/FxMS4NW9GRobGjBmjSpUqKTAwUFWqVNELL7yg/Lg287lz5zRy5EhFR0crMDBQd9xxh7Zt2+byPNkdKwzD0NixY1WmTBkFBgaqbdu2OnjwoNvzfvrpp2rXrp1KliwpLy8v7dy5M885s8t76dIlPfXUU6pbt66CgoIUFRWlvn376vjx427PLV35XNesWVNBQUEqUaKE2rZtqy1btrg979WGDBkiLy8vTZs2ze15+/fvn+Uz3aFDB7fnlaRff/1V9913n6xWq4KCgtS4cWMlJCS4Na+zY5iXl5dee+01t+Y9f/68hg8frnLlyikwMFC1atXSnDlz8pQzp7mTkpLUv39/RUVFqVixYurQoUOejx856WukpqYqJiZGJUuWVPHixdW9e3clJSXlKS8A82zatEk+Pj7q3Lmz2U0BCrXExET95z//UeXKleXv76/y5curS5cuio+PN7tpQKFx7XeYkiVLqkOHDtq1a5fZTUMeUUA32ccff6zY2FiNGzdOP/30k+rXr6/27dvr5MmTbs174cIF1a9fXzNnznRrnqutX79eMTEx2rx5s+Li4nTp0iW1a9dOFy5ccHvucuXK6eWXX9b27dv1448/6q677lLXrl21d+9et+eWpG3btuntt99WvXr18iWfJNWuXVsnTpyw377//nu35zxz5oyaN28uPz8/ff311/rll180ZcoUlShRwq15t23b5vBc4+LiJEk9evRwa95XXnlFs2fP1owZM/Trr7/qlVde0auvvqq33nrLrXkl6dFHH1VcXJzef/997d69W+3a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l156SZLUoEED7dmzR3PmzFG/fv3clvdq8+fPV8eOHV02T/ONLF26VIsXL9aSJUtUu3Zt7dy5UyNHjlRUVJTbn+/777+vgQMHqmzZsvLx8dFtt92mhx9+WNu3b3drXlxx6dIlPfTQQzIMQ7Nnz863vHfeead27typv//+W++8844eeughbdmyReHh4W7Jt337dk2fPl0//fST23/Rca1evXrZ/1+3bl3Vq1dPVapU0bp163T33Xe7JWdmZqYkqWvXrho1apQk6dZbb9XGjRs1Z84ctW7d2i15r/Xuu++qd+/e+fK346233tLmzZv1+eefKzo6Whs2bFBMTIyioqLc+sspPz8/ffrppxo0aJDCwsLk4+Ojtm3bqmPHji4bPWpGXwNA/tm/f7+2bt2qzz77TJLk6+urnj17av78+WrTpo25jQMKEX61AbjWnXfeaf+OeObMGc2aNUsdO3bU1q1bFR0dbXLrcLM4/WGiUqVKycfHR0lJSQ7Lk5KSFBkZaVKr3G/48OFauXKl1q5dq3LlyuVbXovFoqpVq6phw4aaPHmy6tevr+nTp7st3/bt23Xy5Enddttt8vX1la+vr9avX68333xTvr6+bh1Fea3Q0FBVr15dhw4dcmueMmXKZDkhccstt+TL9DGSdOTIEX377bd69NFH8yXf6NGj7aPQ69atqz59+mjUqFH58ouDKlWqaP369Tp//ryOHj2qrVu36tKlS6pcubLbc9vYjlNF7RhmK54fOXJEcXFx+Tb6XJKCgoJUtWpV3X777Zo/f758fX01f/58t+X77rvvdPLkSVWoUMF+HDty5IieeOIJVaxY0W15nalcubJKlSrl1uNYqVKl5Ovra+px7LvvvtP+/fvz5Th28eJFPfvss5o6daq6dOmievXqafjw4erZs6def/11t+dv2LChdu7cqeTkZJ04cUKrVq3SqVOnXHIcu15fIzIyUunp6UpOTnaI9/TjFuCJ5s+fr8uXLysqKsr+N2r27Nn63//+Z5++CUD2qlWrJi8vL+3bt8/spgAewfadrWrVqmrcuLHmzZunCxcu5Pv0tnAtCugmslgsatiwoeLj4+3LMjMzFR8fny9zc+c3wzA0fPhwffbZZ1qzZo0qVapkansyMzPtc7C6w913363du3dr586d9lujRo3Uu3dv7dy5Uz4+Pm7Lfa3z58/rt99+U5ky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rFgxs5sBAAAA5Nkff/yhhg0bas2aNXrttde0e/durVq1SnfeeadiYmIkSZGRkfL393drO/r06aORI0eqa9euWrt2rXbu3KkxY8ZoxYoV+uabb9ya213S09PNbgKAIogCOgAUcDExMbJYLPrmm2/UunVrVahQQR07dtS3336rY8eO6bnnnpMkpaWl6amnnlL58uXl7++vqlWrav78+fbt7N27V/fee69CQkIUHBysli1b6rfffpMktWnTRiNHjnTI261bN/Xv399+v2LFinrhhRf08MMPKygoSGXLltXMmTMdHjN16lTVrVtXQUFBKl++vIYNG6bz589LktatW6cBAwYoJSVFXl5e8vLy0vjx4+3bvnoKl4SEBHXt2lXFixdXSEiIHnroISUlJdnXjx8/Xrfeeqvef/99VaxYUVarVb169dK5c+fyursBAACAPBk2bJi8vLy0detWde/eXdWrV1ft2rUVGxurzZs3S3Ic1V2pUiVJUoMGDeTl5aU2bdpow4YN8vPzU2JiosO2R44cqZYtW2bbhqVLl2rx4sX68MMP9eyzz6px48aqWLGiunbtqjVr1ujOO++UdOWXoPfcc49KlSolq9Wq1q1b66effrJvp2LFipKk+++/X15eXvb7krRixQrddtttCggIUOXKlTVhwgRdvnzZvn7fvn1q0aKFAgICVKtWLX377bdZRrPv3r1bd911lwIDA1WyZEkNHjzY/v1Bkvr3769u3bpp0qRJioqKUo0aNTRx4kTVqVMny3O+9dZbNWbMmGz3DQDkFgV0ACjATp8+rdWrV2vYsGEKDAx0WBcZGanevXvr448/lmEY6tu3rz788EO9+eab+vXXX/X222+rePHikqRjx46pVatW8vf315o1a7R9+3YNHDjQoYObE6+99prq16+vHTt26Omnn9aIESMUFxdnX+/t7a0333xTe/fu1Xvvvac1a9boySeflCTdcccdmjZtmkJCQnTixAmdOHFC//3vf7PkyMzMVNeuXXX69GmtX79ecXFx+v3339WzZ0+HuN9++03Lly/XypUrtXLlSq1fv14vv/xyrp4PAAAA4EqnT5/WqlWrFBMTo6CgoCzrnU1nuHXrVknSt99+qxMnTujTTz9Vq1atVLlyZb3//vv2uEuXLmnx4sUaOHBgtu1YvHixatSooa5du2ZZ5+XlJavVKkk6d+6c+vXrp++//16bN29WtWrV1KlTJ/vAlG3btkmSFixYoBMnTtjvf/fdd+rbt69GjBihX375RW+//bYWLlyoSZMmSZIyMjLUrVs3FStWTFu2bNHcuXPtA39sLly4oPbt26tEiRLatm2bli1bpm+//VbDhw93iIuPj9f+/fsVFxenlStXauDAgfr111/tbZGkHTt2aNeuXRowYEC2+wYAcsvX7AYAAK7v4MGDMgxDt9xyi9P1t9xyi86cOaNt27Zp6dKliouLU9u2bSVJlStXtsfNnDlTVqtVH330kfz8/CRJ1atXz3V7mjdvrqefftr++B9++EFvvPGG7rnnHklyGMVesWJFvfjiixoyZIhmzZoli8Uiq9UqLy8vRUZGXjdHfHy8du/ercOHD6t8+fKSpEWLFql27dratm2bGjduLOlKoX3hwoUKDg6WdOUnqvHx8fZOOwAAAJDfDh06JMMwVLNmzRw/pnTp0pKkkiVLOvSTBw0apAULFmj06NGSpC+++EKpqal66KGHst3mwYMHVaNGjWzj7rrrLof7c+fOVWhoqNavX697773X3rbQ0FCHtk2YMEFPP/20+vXrJ+nKd48XXnhBTz75pMaNG6e4uDj99ttvWrdunf1xkyZNsn9vkKQlS5YoNTVVixYtsp9smDFjhrp06aJXXnlFERERkqSgoCDNmzdPFovF/tj27dtrwYIF9u8GCxYsUOvWrR2+AwGAqzACHQAKAcMwbrj+jz/+kI+Pj1q3bu10/c6dO9WyZUt78fxmNWvWLMv9X3/91X7/22+/1d13362yZcsqODhYffr00alTp3J1kaJff/1V5cuXtxfPJalWrVoKDQ11yFWxYkV78VySypQpo5MnT97M0wIAAABcIrt+e270799fhw4dsk/7snDhQj300ENOR7bfbDuSkpL02GOPqVq1arJarQoJCdH58+eVkJBww8f9/PPPmjhxoooXL26/PfbYYzpx4oT++ecf7d+/X+XLl3coujf5f+zdeVxUZfvH8e8AsggCoiCSiHvuGy65W6JoZlpmbhku5RKWSmXZU24tVuZWblmJWppLpaaW+5qaO7lmmpg+Ke6CKyic3x8+zM+REQEHhuXzfr3mpXPOPedcZ27mcJ1rbu5Tp47FNg4dOqRq1apZHE+DBg2UlJSkw4cPm5dVqVLFonguSS+//LK+//573bx5UwkJ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THHtI1n/HDg4OKhZs2Zq1qyZxo4dq48++kj/+c9/tG7dOpte3wCwxBQuQC5VunRp/fnnnzp37px52R9//JHmO3T7+vqqcePGmj59uk6cOGGxLiMjb5MLg3e/NjY2NkVicenSpRTbT76zevKfRD7//PNKTEy0+id1t2/ftpp83Kt9+/ZydHTU999/rwULFuipp56Su7u7eX1cXJxu375t8ZoqVarIwcEh1ekirl+/rq1bt1pd9+uvv0qSHn30UUky7+/eeK29V4ZhaMKECVa3W7VqVVWtWlVff/21fvzxR3Xq1ElOTtnr+9Fhw4bJMAx169ZNV69eTbF+165dmjlzpqQ7Iz8cHR21ceNGizaTJ09+6DgcHR3Vvn17/fjjj1YvtO7+vKSHu7t7hv5EM3/+/Hrrrbd06NAhvfXWW1Y/W9999522b9+e4X1369ZNK1eu1Pjx41WoUCG1atUq3XGmJq2fR2s/1wkJCenq17ScHwAAQM7BNUvqMuuaxZrHH39c77//viZOnCh/f//7tnN0dExx7AsWLNC///6brv3d6345rbU+2bZt232vudLjjz/+0Pnz51Ms/+eff3Tw4EHzdVtyfJL1azeTyWQxWvz48eNatGhRiu26u7tb7ffSpUsrNjZWe/fuNS87ffq0Fi5caNHu4sWLKV5LLgxkjexVYQFgMz179tTYsWMVGhqqXr166ezZs5o6daoqVaqU5ps/fv7552rYsKFq1qyp3r17q2TJkjp+/LiWLVumqKiodMXTokULOTs7q02bNurTp4+uXr2qr776Sn5+fuYR2dKd+e0mT56sZ555RqVLl9aVK1f01VdfydPTU08++aSkO3MO9unTR6NGjVJUVJRatGihfPny6ciRI1qwYIEmTJig5557LtV4/Pz89Pjjj2vs2LG6cuWKOnbsaLF+7dq16t+/vzp06KBy5crp9u3b+vbbb80F2Pu5fv266tevr8cee0wtW7ZUYGCgLl++rEWLFmnTpk1q166datSoIelOouTt7a2pU6eqQIECcnd3V926dVW+fHmVLl1ab7zxhv799195enrqxx9/THXO7RdffFFvvPGGJNl0+hZbqV+/viZNmqRXXnlF5cuXV7du3VS2bFlduXJF69ev188//2weIePl5aUOHTroiy++kMlkUunSpbV06dIHzhOZVh9//LHWrVununXr6uWX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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "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t9ud9q1ateqSOwYAAOomviFDdeBRSJ4/f74WLFignj17KiYmRkFBQd7uFwAAABAwHoXk1NRUrVmzRmPHjvV2fwAAAICAC/bkoJKSEt14443e7gsAAABQLXgUku+55x5t3LjR230BAAAAqgW3p1skJSU5/m6325WWlqZt27apa9euCgkJcWrLWskAAACoydwOybt373Z63r17d0nS/v37nbZzER8AAABqOrdD8nvvvefLfgAAAADVhkdzkm02m06ePHnB9pMnT6qgoOCSOwUAAAAEkkdLwI0aNUq33367fve73zlt37x5s1577TW9+eabXulcTcd95wEAAGomj0Lyzp07y704r3///kpOTr7kTtV03HceAACgZvMoJBcXF+vs2bMXbC8tLVVhYeEld6qm477zAAAANZtHIfn6669XWlqannnmGaftqamp6tGjh1c6VtNx33kAAICay6OQ/Mc//lHx8fH64osvNGDAAElSRkaGPv30U73zzjte7SAAAADgbx6tbtGnTx99/PHHatWqlTZv3qzXX39dbdu21d69e3XzzTd7u48AAACAX1V5JLm0tFS//e1vNXfuXG3YsMEXfQIAAP/FSklAYFQ5JIeEhOif//yn5s6d64v+AAAAsVISEGgezUkeNmyYXnnlFc2cOdPb/QEAAGKlJCDQPArJ7dq104IFC/Thhx+qR48eatiwodP++++/3yudAwCgLmOlJCBwPArJzz33nCIjI7Vr1y7t2rXLaV9QUBAhGQAAADWaRyE5Ozvb2/1ALRJcmF8jzw0AAHCORyEZqEh49vZAdwEAAOCSeBSSJ02aVOH+VatWedQZ1A6FrfvKHh7pk3MHF+YTwgEAgM95FJJ/+uknp+elpaXav3+/8vPzdeutt3qlY6i57OGRsjdsHuhuAAAAeMyjkPzyyy9fsM1ut2vq1Km68sorL7lTAAAAQCB5bU5ycHCwkpKS1L9/f82ePdtbpwUAeOjo0aOaPHmyCgsLFR4errS0NMXGxga6W0C1xwXokLx84d6hQ4d09uxZb54SAOCBX/ziFyotLXU8P336tH7zm98oJCRE6enpAewZUP1x7QskD0NyUlKS03PDMHTs2DG98cYbGj9+vFc6BgDwjGtAPl9paal+8YtfEJSBCnABOiQp2JODdu/erT179mj37t3avXu39u7dK0lavHixli5d6vZ5tm/frttvv12xsbEKCgrSK6+84rTfMAw98sgjiomJUXh4uOLj4/Xtt986tTl58qRGjx6tiIgIRUZG6u6779bp06ed2uzdu1c333yzTCaTWrVqpSeeeOKCvrz44ovq2LGjTCaTunTpojfffNPt1wEA1cXRo0cvGpDPKS0t1dGjR/3UI6DmOXcBuk8ePgrf8L4qhWS73a5FixapuLhYp06d0vXXX68333xTGRkZeuGFFzR58mTVr+/+4PSZM2fUrVs3rVixotz9TzzxhJ5++mmlpqZq586datiwoRISElRUVORoM3r0aH355ZdKT0/Xli1btH37dk2ePNmxv6CgQAMHDpTFYtGuXbv05JNP6tFHH1VaWpqjzUcffaS77rpLd999t3bv3q1hw4Zp2LBh2r9/f1V+PAAQcBMnTvRqOwCoq6o03SIlJUWPPvqo4uPjFR4erqefflr//ve/PV4XefDgwRo8eHC5+wzD0NKlS/Xwww9r6NChkqS1a9cqKipKr7zyikaNGqWvv/5aW7du1aeffqqePXtKkp555hnddttt+vOf/6zY2Fht2LBBJSUlWrVqlUJDQ9W5c2ft2bNHTz31lCNML1u2TIMGDdKsWbMkSY899pjS09O1fPlypaamevTaAPhfUVGRcnNzPTo2Li5OJpPJyz3yv+LiYq+2A4C6qkohee3atfrLX/6i3/72t5Kkbdu2aciQIfrb3/6m4GCPZm5cVHZ2tvLy8hQfH+/YZjab1atXL+3YsUOjRo3Sjh07FBkZ6QjIkhQfH6/g4GDt3LlTd9xxh3bs2KG+ffsqNDTU0SYhIUGLFi3STz/9pCZNmmjHjh0XzLNOSEi4YPrH+YqLi50+ZAoKCrzwqgFcitzcXKdvkqoiLS1N7du393KPAAA1VZVCcm5urm677TbH8/j4eAUFBeno0aNq2bKlVzuWl5cnSYqKinLaHhUV5diXl5enFi1aOO2vX7++mjZt6tSmdevWF5zj3L4mTZooLy+vwjrlWbhwoebPn+/BKwPgK3FxcU5Tqc6Xk5OjlJQUJScny2KxlHssAADnVCkknz179oKvI0NCQiq9SKQ2mjNnjtPoc0FBgVq1ahXAHgEwmUyVjgZbLBZGjAEAlapSSDYMQxMmTFBYWJhjW1FRkaZMmaKGDRs6tr300kuX3LHo6GhJktVqVUxMjGO71WpV9+7dHW2OHz/udNzZs2d18uRJx/HR0dGyWq1Obc49r6zNuf3lCQsLc/o5AAAAoPaoUkgubw3kMWPGeK0z52vdurWio6OVkZHhCMUFBQXauXOnpk6dKknq3bu38vPztWvXLvXo0UOS9O6778put6tXr16ONsnJySotLVVISIgkKT09XR06dFCTJk0cbTIyMjRjxgxH/fT0dPXu3dsnrw3ApbNarbLZbG63z8nJcfrTHWaz+YKpWACAuqFKIXn16tVeLX769Gl99913jufZ2dnas2ePmjZtqri4OM2YMUN//OMf1a5dO7Vu3Vpz585VbGyshg0bJkm66qqrNGjQIN17771KTU1VaWmppk2bplGjRjluvfqb3/xG8+fP1913360HH3xQ+/fv17Jly7RkyRJH3enTp6tfv35avHixhgwZohdeeEGfffbZRec21gTBRe6Hh+p0bsAdVqtVY8aOU2lJ1VdoSElJcbttSGiY1q9bS1AGgDrIq7elrqrPPvtMt9xyi+P5uTm+48eP15o1azR79mydOXNGkydPVn5+vm666SZt3brVaV70hg0bNG3aNA0YMEDBwcEaMWKEnn76acd+s9msd955R4mJierRo4eaN2+uRx55xOkK+BtvvFEbN27Uww8/rD/84Q9q166dXnnlFV199dV++Cl4l9lsVkhomHQ4y6d1QkLDZDabfVoDuBibzabSkmIVtuknu8k3/x8GF9mkw1my2WyEZACogwIakvv37y/DMC66PygoSAsWLNCCBQsu2qZp06bauHFjhXW6du2q999/v8I2d955p+68886KO1wDREVFaf26tVX+Grqiq/7Lw9fQqA7sJrPsDZsHuhsAgFoooCEZvhEVFeVRgOWqfwAAgP/w7h1AAAAAgFqAkAwAAAC4ICQDAAAALgjJAAAAgAtCMgAAAOCC1S0AwAuKioqUm5tb7r7K7vYXFxfntP77pVi6dKnT3UMragcAuDhCMgB4QW5urtNNispzsbv9paWleW35xe7du3u1HQDUVYRkwEcqGlmsjDdHFuEfcXFxHt/KPi4uzqt9yczMVP/+/SvcDwCoGCEZ8BF3RhYvxpsji/APk8lUrf6bZWZmas+ePU5TL5YuXcoIMgC4iZAM+EhFI4uV3Qrc2yOLqJu6d+/OqDEAeIiQDPiIOyOL3AocAIDqiSXgAAAAABeEZAAAAMAFIRkAAABw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SVJeXt4FweXc88raFBQUqLCw8KJ9W7hwocxms+PRqlWrS325AGoJd2877YvbU1eXiwYBXysvIFdlP1CZah2SBw8erDvvvFNdu3ZVQkKC3nzzTeXn52vz5s2B7prmzJkjm83meHz//feB7hKAasLdm4T44mYila3PXNV2QHW0atUqr7YDylPtp1ucLzIyUu3bt9d3332nX/ziFyopKVF+fr7TaLLVanXMYY6OjtYnn3zidI5zq1+c38Z1RQyr1aqIiAiFh4dftC9hYWEKCwvzxssq97ddviYCai6z2awTJ0641Q5A1Z0/B7mydsxPhqeq9Uiyq9OnT+vQoUOKiYlRjx49FBISooyMDMf+AwcOKDc3V71795Yk9e7dW/v27dPx48cdbdLT0xUREaFOnTo52px/jnNtzp3D1y72dRBfEwE1VyBXtwgKCnJ63qBBA11zzTVq0KBBhe0AAM6qdUj+/e9/r6ysLP3rX//SRx99pDvuuEP16tXTXXfdJbPZrLvvvltJSUl67733tGvXLk2cOFG9e/fWDTfcIEkaOHCgOnXqpLFjx+qLL77Q22+/rYcffliJiYmOUeApU6bo8OHDmj17tr755hv95S9/0ebNmzVz5kyfvz7mUwG1k7sX8vrigl/Xb8B+/vln7d69Wz///HOF7QAAzqr1dIsffvhBd911l06cOKHLLrtMN910kz7++GNddtllkqQlS5YoODhYI0aMUHFxsRISEvSXv/zFcXy9evW0ZcsWTZ06Vb1791bDhg01fvx4LViwwNGmdevWeuONNzRz5kwtW7ZMLVu21N/+9jefL//mbgDu378/Uy+AGsad1SWq0q4qfH0jk+DCfI+OC/S564IffvhB99xzj4qLixUWFqa//e1vatmyZaC7BdRY1Tokv/DCCxXuN5lMWrFihVasWHHRNhaLRW+++WaF5+nfv792797tUR8BwFX9+vXduijv/JsjeYvJZHJr5QpPl4ALz97u0XHwrQEDBqisrMzxvKioSGPGjFG9evUumFIIwD3VOiQDQE0UHR2t3Nxcx/PLL79cERERKigo0JEjR5zaedsNN9ygLVu2uNXOE4Wt+8oeHunRsZUJLswnhHvANSCfr6ysTAMGDCAoAx4gJAOAlw0aNEhpaWmO50eOHHEKx+e387bExES3QnJiYqJH57eHR8resLlHx8L7fvjhh4sG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okULdejQQVOnTtWJEyd8XtNut+uNN95Q+/btlZCQoBYtWqhXr15+m8J4PqvVqjfeeEN33323X+rdeOONeu2113TkyBEZhqH33ntPBw8e1MCBA31at7i4WJKc3uOCg4MVFhbmk/c415yya9culZaWOr23dezYUXFxcV57byMkQ3a7XTNmzFCfPn109dVX+6Xmvn371KhRI4WFhWnKlCl6+eWX1alTJ7/UfuGFF/T5559r4cKFfql3Tq9evbRmzRpt3bpVK1euVHZ2tm6++WadOnXK57UPHz6slStXql27dnr77bc1depU3X///Xr++ed9Xvt8r7zyivLz8zVhwgS/1HvooYc0atQodezYUSEhIbrmmms0Y8YMjR492ue1GzdurN69e+uxxx7T0aNHVVZWpvXr12vHjh06duyYz+ufk5eXJ0mKiopy2h4VFeXYVxcUFRXpwQcf1F133aWIiAi/1NyyZYsaNWokk8mkJUuWKD09Xc2bN/d53UWLFql+/fq6//77fV7L1aBBg7R27VplZGRo0aJFysrK0uDBg1VWVubTusePH9fp06f1+OOPa9CgQXrnnXd0xx13aPjw4crKyvJpbVfPP/+8Gjdu7N2v/SvwzDPPqFOnTmrZsqVCQ0M1aNAgrVixQn379vVp3XOBdM6cOfrpp59UUlKiRYsW6YcffvD6e1x5OSUvL0+hoaEX/NLrzfe2+l45C2q0xMRE7d+/36+jWx06dNCePXtks9n0j3/8Q+PHj1dWVpbPg/L333+v6dOnKz093Svz1Kri/NHLrl27qlevXrJYLNq8ebPPRxzsdrt69uypP/3pT5Kka665Rvv371dqaqrGjx/v09rne+655zR48GCvzpGsyObNm7VhwwZt3LhRnTt31p49ezRjxgzFxsb65XWvW7dOkyZN0uWXX6569erp2muv1V133aVdu3b5vDb+p7S0VL/+9a9lGIZWrlzpt7q33HKL9uzZox9//FF//etf9etf/1o7d+5UixYtfFZz165dWrZsmT7//HO/fFvjatSoUY6/d+nSRV27dtWVV16pzMxMDRgwwGd17Xa7JGno0KGaOXOmJKl79+766KOPlJqaqn79+vmstqtVq1Zp9OjRfvuMeeaZZ/Txxx/rtddek8Vi0fbt25WYmKjY2FifflsaEhKil156SXfffbeaNm2qevXqKT4+XoMHD/b6xdGByCkSI8l13rRp07Rlyxa99957atmypd/qhoaGqm3bturRo4cWLlyobt26admyZT6vu2vXLh0/flzXXnut6tevr/r16ysrK0tPP/206tev7/PRjvNFRkaqffv2+u6773xeKyYm5oJfQK666iq/TfeQpJycHG3btk333HOP32rOmjXLMZrcpUsXjR07VjNnzvTbtwhXXnmlsrKydPr0aX3//ff65JNPVFpaqjZt2vilviRFR0dL0gVXfFutVse+2uxcQM7JyVF6errfRpElqWHDhmrbtq1uuOEGPffcc6pfv76ee+45n9Z8//33dfz4ccXFxTne43JycvTAAw/oiiuu8Gnt8rRp00bNmzf3+ftc8+bNVb9+/YC/z73//vs6cOCA397nCgsL9Yc//EFPPfWUbr/9dnXt2lXTpk3TyJEj9ec//9nn9Xv06KE9e/YoPz9fx44d09atW3XixAmvvsddLKdER0erpKRE+fn5Tu29+d5GSK6jDMPQtGnT9PLLL+vdd99V69atA9ofu93umN/kSwMGDNC+ffu0Z88ex6Nnz54aPXq09uzZo3r16vm8D+ecPn1ahw4dUkxMjM9r9enT54Klcw4ePCiLxeLz2uesXr1aLVq00JAhQ/xW8+eff1ZwsPPbXL169RyjTv7SsGFDxcTE6KefftLbb7+toUOH+q1269atFR0drYyMDMe2goIC7dy506/XAQTCuYD87bffatu2bWrWrFlA++OP97mxY8dq7969Tu9xsbGxmjVrlt5++22f1i7PDz/8oBMnTvj8fS40NFTXXXddwN/nnnvuOfXo0cMvc8+l//w/XlpaGvD3ObPZrMsuu0zffvutPvvsM6+8x1WWU3r06KGQkBCn97YDBw4oNzfXa+9tTLcIsNOnTzv9hp2dna09e/aoadOmiouL81ndxMREbdy4Ua+++qoaN27smL9jNpsVHh7us7qSNGfOHA0ePFhxcXE6deqUNm7cqMzMTL+8gTdu3PiCedcNGzZUs2bNfD4f+/e//71uv/12WSwWHT16VPPmzVO9evV01113+bSu9J9lcm688Ub96U9/0q9//Wt98sknSktLU1pams9rS/8JB6tXr9b48eNVv77/3nZuv/12paSkKC4uTp07d9bu3bv11FNPadKkSX6p//bbb8swDHXo0EHfffedZs2apY4dO2rixIlerVPZ+8iMGTP0xz/+Ue3atVPr1q01d+5cxcbGatiwYT6vffLkSeXm5jrWJz4XYqKjoy95tKei2jExMfrVr36lzz//XFu2bFFZWZnjfa5p06YKDQ31We1mzZopJSVFv/zlLxUTE6Mff/xRK1as0JEjR7yy9GFlP3PXXwZCQkIUHR2tDh06+LR206ZNNX/+fI0YMULR0dE6dOiQZs+erbZt2yohIcGntePi4jRr1iyNHDlSffv21S233KKtW7fq9ddfV2Zmps9rS//55fPFF1/U4sWLL7leVWr369dPs2bNUnh4uCwWi7KysrR27Vo99dRTPq/94osv6rLLLlNcXJz27dun6dOna9iwYV65aLCynGI2m3X33XcrKSlJTZs2VUREhO677z717t1bN9xwwyXXl8QScIH23nvvGZIueIwfP96ndcurKclYvXq1T+sahmFMmjTJsFgsRmhoqHHZZZcZAwYMMN555x2f170Yfy0BN3LkSCMmJsYIDQ01Lr/8cmPkyJHGd9995/O657z++uvG1VdfbYSFhRkdO3Y00tLS/Fb77bffNiQZBw4c8FtNwzCMgoICY/r06UZcXJxhMpmMNm3aGMnJyUZxcbFf6m/atMlo06aNERoaakRHRxuJiYlGfn6+1+tU9j5it9uNuXPnGlFRUUZYWJgxYMAAr/23qKz26tWry90/b948n9Y+t+RceY/33nvPp7ULCwuNO+64w4iNjTVCQ0ONmJgY45e//KXxySefXHLdymqXx5tLwFVU++effzYGDhxoXHbZZUZISIhhsViMe++918jLy/N57XOee+45o23btobJZDK6detmvPLKK36r/eyzzxrh4eFe/zdeWe1jx44ZEyZMMGJjYw2TyWR06NDBWLx4sVeW2ays9rJly4yWLVsaISEhRlxcnPHwww977f3VnZxSWFho/O53vzOaNGliNGjQwLjjjjuMY8eOeaW+YRhG0H87AgAAAOC/mJMMAAAAuCAkAwAAAC4IyQAAAIALQjIAAADggpAMAAAAuCAkAwAAAC4IyQAAAIALQjIAAADggpAMANXQhAkTvHLbaACAZwjJAFAFEyZMUFBQkIKCghQaGqq2bdtqwYIFOnv2bKC7VqE1a9YoMjKyysd99913mjhxolq2bKmwsDC1bt1ad911lz777DO3z/Hoo4+qe/fuVa4NAIFESAaAKho0aJCOHTumb7/9Vg888IAeffRRPfnkkxe0KykpCUDvvOezzz5Tjx49dPDgQT377LP66quv9PLLL6tjx4564IEHAt09j5WWlga6CwBqAEIyAFRRWFiYoqOjZbFYNHXqVMXHx+u1115zTJFISUlRbGysOnToIEnat2+fbr31VoWHh6tZs2aaPHmyTp8+7ThfWVmZkpKSFBkZqWbNmmn27NkyDMOp5hVXXKGlS5c6bevevbseffRRx/P8/Hz99re/VVRUlEwmk66++mpt2bJFmZmZmjhxomw2m2MU/PzjymMYhiZMmKB27drp/fff15AhQ3TllVeqe/fumjdvnl599VVH2wcffFDt27dXgwYN1KZNG82dO9cRRNesWaP58+friy++cNRes2aNo7/33HOPLrvsMkVEROjWW2/VF1984dSPP/7xj2rRooUaN26se+65Rw899JDTqLTdbteCBQscI93du3fX1q1bHfv/9a9/KSgoSJs2bVK/fv1kMpmUlpamiIgI/eMf/3Cq9corr6hhw4Y6depUhT8bAHUDIRkALlF4eLhj1DgjI0MHDhxQenq6tmzZojNnzighIUFNmjTRp59+qhdffFHbtm3TtGnTHMcvXrxYa9as0apVq/TBBx/o5MmTevnll6vUB7vdrsGDB+vDDz/U+vXr9dVXX+nxxx9XvXr1dOONN2rp0qWKiIjQsWPHdOzYMf3+97+v8Hx79uzRl19+qQceeEDBwRd+VJw/daNx48Zas2aNvvrqKy1btkx//etftWTJEknSyJEj9cADD6hz586O2iNHjpQk3XnnnTp+/Ljeeust7dq1S9dee60GDBigkydPSpI2bNiglJQULVq0SLt27VJcXJxWrlzp1I9ly5Zp8eLF+vOf/6y9e/cqISFBv/zlL/Xtt986tXvooYc0ffp0ff311xo+fLhGjRql1atXO7VZvXq1fvWrX6lx48bu/dAB1G4GAMBt48ePN4YOHWoYhmHY7XYjPT3dCAsLM37/+98b48ePN6Kioozi4mJH+7S0NKNJkybG6dOnHdveeOMNIzg42MjLyzMMwzBiYmKMJ554wrG/tLTUaNmypaOOYRiGxWIxlixZ4tSXbt26GfPmzTMMwzDefvttIzg42Dhw4EC5/V69erVhNpvdfp2bNm0yJBmff/6528ec8+STTxo9evRwPJ83b57RrVs3pzbvv/++ERERYRQVFTltv/LKK41nn33WMAzD6NWrl5GYmOi0v0+fPk7nio2NNVJSUpzaXHfddcbvfvc7wzAMIzs725BkLF261KnNzp07jXr16hlHjx41DMMwrFarUb9+fSMzM7PKrxdA7cRIMgBU0ZYtW9SoUSOZTCYNHjxYI0eOdExf6NKli0JDQx1tv/76a3Xr1k0NGzZ0bOvTp4/sdrsOHDggm82mY8eOqVevXo799evXV8+ePavUpz179qhly5Zq3779pb24/zJcpntUZNOmTerTp4+io6PVqFEjPfzww8rNza3wmC+++EKnT59Ws2bN1KhRI8cjOztbhw4dkiQdOHBA119/vdNx5z8vKCjQ0aNH1adPH6c2ffr00ddff+20zfXnef3116tz5856/vnnJUnr16+XxWJR37593X7dAGq3+oHuAADUNLfccotWrlyp0NBQxcbGqn79/72Vnh+GvSk4OPiC4Hr+BWjh4eFerXcubH/zzTe65pprLtpux44dGj16tObPn6+EhASZzWa98MILWrx4cYXnP336tGJiYpSZmXnBPk9W4ahMef9d7rnnHq1YsUIPPfSQVq9erYkTJyooKMjrtQHUTIwkA0AVNWzYUG3btlVcXJxTQC7PVVddpS+++EJnzpxxbPvwww8VHBysDh06yGw2KyYmRjt37nTsP3v2rHbt2uV0nssuu0zHjh1zPC8oKFB2drbjedeuXfXDDz/o4MGD5fYjNDRUZWVlbr/G7t27q1OnTlq8eLHsdvsF+/Pz8yVJH330kSwWi5KTk9WzZ0+1a9dOOTk5lda+9tprlZeXp/r166tt27ZOj+bNm0uSOnTooE8//dTpuPOfR0REKDY2Vh9++KFTmw8//FCdOnWq9DWOGTNGOTk5evrpp/XVV19p/PjxlR4DoO4gJAOAD40ePVomk0njx4/X/v379d577+m+++7T2LFjFRUVJUmaPn26Hn/8cb3yyiv65ptv9Lvf/c4RQs+59dZbtW7dOr3//vvat2+fxo8fr3r16jn29+vXT3379tWIESOUnp6u7OxsvfXWW46VHq644gqdPn1aGRkZ+vHHH/Xzzz9X2O+goCCtXr1aBw8e1M0336w333xThw8f1t69e5WSkqKhQ4dKktq1a6fc3Fy98MILOnTokJ5++ukLLjq84oorlJ2drT179ujHH39UcXGx4uPj1bt3bw0bNkzvvPOO/vWvf+mjjz5ScnKyYw3m++67T88995yef/55ffvtt/rjH/+ovXv3Oo32zpo1S4sWLdKmTZt04MABPfTQQ9qzZ4+mT59e6X+bJk2aaPjw4Zo1a5YGDhyoli1bVnoMgDok0JOiAaAmOf/CPXf37d2717jlllsMk8lkNG3a1Lj33nuNU6dOOfaXlpYa06dPNyIiIozIyEgjKSnJGDdunNO5bDabMXLkSCMiIsJo1aqVsWbNGqcL9wzDME6cOGFMnDjRaNasmWEymYyrr77a2LJli2P/lClTjGbNmhmSnI6ryIEDB4xx48YZsbGxRmhoqGGxWIy77rrL6YK+WbNmGc2aNTMaNWpkjBw50liyZInTRYJFRUXGiBEjjMjISEOSsXr1asMwDKOgoMC47777jNjYWCMkJMRo1aqVMXr0aCM3N9dx7IIFC4zmzZsbjRo1MiZNmmTcf//9xg033ODYX1ZWZjz66KPG5ZdfboSEhBjdunUz3nrrLcf+cxfu7d69u9zXl5GRYUgyNm/e7NbPA0DdEWQYVbg6AwCAAPrFL36h6OhorVu3zivnW7dunWbOnKmjR486XXAJAFy4BwColn7++WelpqYqISFB9erV09///ndt27ZN6enpXjn3sWPH9Pjjj+u3v/0tARnABZiTDAB10Pvvv++09JrrozoICgrSm2++qb59+6pHjx56/fXX9c9//lPx8fGXfO4nnnhCHTt2VHR0tObMmeOF3gKobZhuAQB1UGFhoY4cOXLR/W3btvVjbwCg+iEkAwAAAC6YbgEAAAC4ICQDAAAALgjJAAAAgAtCMgAAAOCCkAwAAAC4ICQDAAAALgjJAAAAgIv/B0W7HyoF6vYPAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, axs = plt.subplots(nrows=2, ncols=2, figsize=(20, 6))\n",
        "fig.subplots_adjust(top=1.5)\n",
        "sns.boxplot(data=df, y='Purchase', x='Gender', hue='Age', ax=axs[0,0])\n",
        "sns.boxplot(data=df, y='Purchase', x='Gender', hue='City_Category', ax=axs[0,1])\n",
        "\n",
        "sns.boxplot(data=df, y='Purchase', x='Gender', hue='Marital_Status', ax=axs[1,0])\n",
        "sns.boxplot(data=df, y='Purchase', x='Gender', hue='Stay_In_Current_City_Years', ax=axs[1,1])\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 917
        },
        "id": "08EEWHIjJNYa",
        "outputId": "cda107f1-e4f2-44a5-d34d-b3ff4fe1fe88"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x600 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "avgamt_gender = df.groupby(['User_ID', 'Gender'])[['Purchase']].sum()\n",
        "avgamt_gender = avgamt_gender.reset_index()\n",
        "avgamt_gender\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "zS83uHqmMYQu",
        "outputId": "1f1240ed-a74e-4d6b-b39a-e976867769a8"
      },
      "execution_count": 92,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      User_ID Gender  Purchase\n",
              "0     1000001      F    334093\n",
              "1     1000002      M    810472\n",
              "2     1000003      M    341635\n",
              "3     1000004      M    206468\n",
              "4     1000005      M    821001\n",
              "...       ...    ...       ...\n",
              "5886  1006036      F   4116058\n",
              "5887  1006037      F   1119538\n",
              "5888  1006038      F     90034\n",
              "5889  1006039      F    590319\n",
              "5890  1006040      M   1653299\n",
              "\n",
              "[5891 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-441e9b08-cc30-4030-9a0a-8a86e96ddc3c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User_ID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Purchase</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1000001</td>\n",
              "      <td>F</td>\n",
              "      <td>334093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1000002</td>\n",
              "      <td>M</td>\n",
              "      <td>810472</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1000003</td>\n",
              "      <td>M</td>\n",
              "      <td>341635</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1000004</td>\n",
              "      <td>M</td>\n",
              "      <td>206468</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1000005</td>\n",
              "      <td>M</td>\n",
              "      <td>821001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5886</th>\n",
              "      <td>1006036</td>\n",
              "      <td>F</td>\n",
              "      <td>4116058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5887</th>\n",
              "      <td>1006037</td>\n",
              "      <td>F</td>\n",
              "      <td>1119538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5888</th>\n",
              "      <td>1006038</td>\n",
              "      <td>F</td>\n",
              "      <td>90034</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5889</th>\n",
              "      <td>1006039</td>\n",
              "      <td>F</td>\n",
              "      <td>590319</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5890</th>\n",
              "      <td>1006040</td>\n",
              "      <td>M</td>\n",
              "      <td>1653299</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5891 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-441e9b08-cc30-4030-9a0a-8a86e96ddc3c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-441e9b08-cc30-4030-9a0a-8a86e96ddc3c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-441e9b08-cc30-4030-9a0a-8a86e96ddc3c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ecfc6a8d-3774-45b6-b727-7192bd7ec34a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ecfc6a8d-3774-45b6-b727-7192bd7ec34a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ecfc6a8d-3774-45b6-b727-7192bd7ec34a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_1153eea1-f737-4730-a7ad-ae7c2175daa3\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('avgamt_gender')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_1153eea1-f737-4730-a7ad-ae7c2175daa3 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('avgamt_gender');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "avgamt_gender",
              "summary": "{\n  \"name\": \"avgamt_gender\",\n  \"rows\": 5891,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1743,\n        \"min\": 1000001,\n        \"max\": 1006040,\n        \"num_unique_values\": 5891,\n        \"samples\": [\n          1005508,\n          1005718,\n          1005135\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 943644,\n        \"min\": 46681,\n        \"max\": 10536909,\n        \"num_unique_values\": 5876,\n        \"samples\": [\n          1719342,\n          345260\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(16,5))\n",
        "sns.histplot(data=avgamt_gender[avgamt_gender['Gender']=='F']['Purchase'], ax=axs[0],color=\"red\").set_title(\"Females Avg Spend\")\n",
        "sns.histplot(data=avgamt_gender[avgamt_gender['Gender']=='M']['Purchase'], ax=axs[1],color=\"yellow\").set_title(\"Males Avg Spend\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        },
        "id": "yY3QRYdmMYjU",
        "outputId": "75f829bf-289c-40d3-a959-79ab4d6afa02"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Males Avg Spend')"
            ]
          },
          "metadata": {},
          "execution_count": 93
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "avgamt_gender.groupby(['Gender'])[['Purchase']].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 144
        },
        "id": "yVNH7AmGREYx",
        "outputId": "b7c612e5-d3e6-4b6b-a94f-34fb3b945279"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Purchase\n",
              "Gender               \n",
              "F       712024.394958\n",
              "M       925344.402367"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ffa4ef69-a4ac-4b75-9abd-576525e3abb1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Purchase</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gender</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>F</th>\n",
              "      <td>712024.394958</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>M</th>\n",
              "      <td>925344.402367</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ffa4ef69-a4ac-4b75-9abd-576525e3abb1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ffa4ef69-a4ac-4b75-9abd-576525e3abb1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ffa4ef69-a4ac-4b75-9abd-576525e3abb1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-49d28202-0288-415d-8468-bf8dfcbfcdb8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-49d28202-0288-415d-8468-bf8dfcbfcdb8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-49d28202-0288-415d-8468-bf8dfcbfcdb8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"avgamt_gender\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150840.02380158415,\n        \"min\": 712024.3949579832,\n        \"max\": 925344.4023668639,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          925344.4023668639,\n          712024.3949579832\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "avgamt_gender.groupby(['Gender'])[['Purchase']].mean()\n",
        "avgamt_gender.groupby(['Gender'])['Purchase'].sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H3wzseu3Q875",
        "outputId": "5d8826b9-14ae-4c5e-b5dd-dd12317c7cef"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Gender\n",
              "F    1186232642\n",
              "M    3909580100\n",
              "Name: Purchase, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "avgamt_male = avgamt_gender[avgamt_gender['Gender']=='M']\n",
        "avgamt_female = avgamt_gender[avgamt_gender['Gender']=='F']"
      ],
      "metadata": {
        "id": "KNW7yJQlTOBb"
      },
      "execution_count": 99,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "genders = [\"M\", \"F\"]\n",
        "\n",
        "sample_size = 1000\n",
        "\n",
        "num_repitions = 1000\n",
        "male_means = []\n",
        "female_means = []\n",
        "\n",
        "for i in range(num_repitions):\n",
        "    male_mean = avgamt_male.sample(sample_size, replace=True)['Purchase'].mean()\n",
        "    female_mean = avgamt_female.sample(sample_size, replace=True)['Purchase'].mean()\n",
        "\n",
        "    male_means.append(male_mean)\n",
        "    female_means.append(female_mean)\n"
      ],
      "metadata": {
        "id": "R0dvnInVPMLf"
      },
      "execution_count": 100,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, axis = plt.subplots(nrows=1, ncols=2, figsize=(20, 6))\n",
        "axis[0].hist(male_means, bins=35)\n",
        "axis[1].hist(female_means, bins=35)\n",
        "axis[0].set_title(\"Male distribution of means, Sample size: 1000\")\n",
        "axis[1].set_title(\"Female distribution of means, Sample size: 1000\")\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 563
        },
        "id": "Vn787O4bNo5s",
        "outputId": "b0dcc3b8-d52d-4065-bb6d-88b34bad25a1"
      },
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Taking the values for z at 90%, 95% and 99% confidence interval as:\n",
        "z90=1.645 #90% Confidence Interval\n",
        "z95=1.960 #95% Confidence Interval\n",
        "z99=2.576 #99% Confidence Interval\n",
        "\n",
        "print(\"Population avg spend amount for Male: {:.2f}\".format(avgamt_male['Purchase'].mean()))\n",
        "print(\"Population avg spend amount for Female: {:.2f}\\n\".format(avgamt_female['Purchase'].mean()))\n",
        "\n",
        "print(\"Sample avg spend amount for Male: {:.2f}\".format(np.mean(male_means)))\n",
        "print(\"Sample avg spend amount for Female: {:.2f}\\n\".format(np.mean(female_means)))\n",
        "\n",
        "print(\"Sample std for Male: {:.2f}\".format(pd.Series(male_means).std()))\n",
        "print(\"Sample std for Female: {:.2f}\\n\".format(pd.Series(female_means).std()))\n",
        "\n",
        "print(\"Sample std error for Male: {:.2f}\".format(pd.Series(male_means).std()/np.sqrt(1000)))\n",
        "print(\"Sample std error for Female: {:.2f}\\n\".format(pd.Series(female_means).std()/np.sqrt(1000)))\n",
        "\n",
        "sample_mean_male=np.mean(male_means)\n",
        "sample_mean_female=np.mean(female_means)\n",
        "\n",
        "sample_std_male=pd.Series(male_means).std()\n",
        "sample_std_female=pd.Series(female_means).std()\n",
        "\n",
        "sample_std_error_male=sample_std_male/np.sqrt(1000)\n",
        "sample_std_error_female=sample_std_female/np.sqrt(1000)\n",
        "\n",
        "Upper_Limit_male=z90*sample_std_error_male + sample_mean_male\n",
        "Lower_Limit_male=sample_mean_male - z90*sample_std_error_male\n",
        "\n",
        "Upper_Limit_female=z90*sample_std_error_female + sample_mean_female\n",
        "Lower_Limit_female=sample_mean_female - z90*sample_std_error_female\n",
        "\n",
        "print(\"Male_CI: \",[Lower_Limit_male,Upper_Limit_male])\n",
        "print(\"Female_CI: \",[Lower_Limit_female,Upper_Limit_female])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S03IcHJxQ011",
        "outputId": "2effbbc7-596f-4472-cdd9-a7f8d15fdb20"
      },
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Population avg spend amount for Male: 925344.40\n",
            "Population avg spend amount for Female: 712024.39\n",
            "\n",
            "Sample avg spend amount for Male: 925612.32\n",
            "Sample avg spend amount for Female: 712628.85\n",
            "\n",
            "Sample std for Male: 33064.28\n",
            "Sample std for Female: 25553.47\n",
            "\n",
            "Sample std error for Male: 1045.58\n",
            "Sample std error for Female: 808.07\n",
            "\n",
            "Male_CI:  [923892.3319706925, 927332.3042273076]\n",
            "Female_CI:  [711299.5707252895, 713958.1270047106]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "z90=1.645 #90% Confidence Interval\n",
        "z95=1.960 #95% Confidence Interval\n",
        "z99=2.576 #99% Confidence Interval\n",
        "\n",
        "print(\"Population avg spend amount for Male: {:.2f}\".format(avgamt_male['Purchase'].mean()))\n",
        "print(\"Population avg spend amount for Female: {:.2f}\\n\".format(avgamt_female['Purchase'].mean()))\n",
        "\n",
        "print(\"Sample avg spend amount for Male: {:.2f}\".format(np.mean(male_means)))\n",
        "print(\"Sample avg spend amount for Female: {:.2f}\\n\".format(np.mean(female_means)))\n",
        "\n",
        "print(\"Sample std for Male: {:.2f}\".format(pd.Series(male_means).std()))\n",
        "print(\"Sample std for Female: {:.2f}\\n\".format(pd.Series(female_means).std()))\n",
        "\n",
        "print(\"Sample std error for Male: {:.2f}\".format(pd.Series(male_means).std()/np.sqrt(1000)))\n",
        "print(\"Sample std error for Female: {:.2f}\\n\".format(pd.Series(female_means).std()/np.sqrt(1000)))\n",
        "\n",
        "sample_mean_male=np.mean(male_means)\n",
        "sample_mean_female=np.mean(female_means)\n",
        "\n",
        "sample_std_male=pd.Series(male_means).std()\n",
        "sample_std_female=pd.Series(female_means).std()\n",
        "\n",
        "sample_std_error_male=sample_std_male/np.sqrt(1000)\n",
        "sample_std_error_female=sample_std_female/np.sqrt(1000)\n",
        "\n",
        "Upper_Limit_male=z95*sample_std_error_male + sample_mean_male\n",
        "Lower_Limit_male=sample_mean_male - z95*sample_std_error_male\n",
        "\n",
        "Upper_Limit_female=z95*sample_std_error_female + sample_mean_female\n",
        "Lower_Limit_female=sample_mean_female - z95*sample_std_error_female\n",
        "\n",
        "print(\"Male_CI: \",[Lower_Limit_male,Upper_Limit_male])\n",
        "print(\"Female_CI: \",[Lower_Limit_female,Upper_Limit_female])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9C1TQXTVQ1QN",
        "outputId": "fca8f48e-a2c3-46ac-ba14-1fccc5366126"
      },
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Population avg spend amount for Male: 925344.40\n",
            "Population avg spend amount for Female: 712024.39\n",
            "\n",
            "Sample avg spend amount for Male: 925612.32\n",
            "Sample avg spend amount for Female: 712628.85\n",
            "\n",
            "Sample std for Male: 33064.28\n",
            "Sample std for Female: 25553.47\n",
            "\n",
            "Sample std error for Male: 1045.58\n",
            "Sample std error for Female: 808.07\n",
            "\n",
            "Male_CI:  [923562.9729248463, 927661.6632731537]\n",
            "Female_CI:  [711045.0281027918, 714212.6696272084]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "z90=1.645 #90% Confidence Interval\n",
        "z95=1.960 #95% Confidence Interval\n",
        "z99=2.576 #99% Confidence Interval\n",
        "\n",
        "print(\"Population avg spend amount for Male: {:.2f}\".format(avgamt_male['Purchase'].mean()))\n",
        "print(\"Population avg spend amount for Female: {:.2f}\\n\".format(avgamt_female['Purchase'].mean()))\n",
        "\n",
        "print(\"Sample avg spend amount for Male: {:.2f}\".format(np.mean(male_means)))\n",
        "print(\"Sample avg spend amount for Female: {:.2f}\\n\".format(np.mean(female_means)))\n",
        "\n",
        "print(\"Sample std for Male: {:.2f}\".format(pd.Series(male_means).std()))\n",
        "print(\"Sample std for Female: {:.2f}\\n\".format(pd.Series(female_means).std()))\n",
        "\n",
        "print(\"Sample std error for Male: {:.2f}\".format(pd.Series(male_means).std()/np.sqrt(1000)))\n",
        "print(\"Sample std error for Female: {:.2f}\\n\".format(pd.Series(female_means).std()/np.sqrt(1000)))\n",
        "\n",
        "sample_mean_male=np.mean(male_means)\n",
        "sample_mean_female=np.mean(female_means)\n",
        "\n",
        "sample_std_male=pd.Series(male_means).std()\n",
        "sample_std_female=pd.Series(female_means).std()\n",
        "\n",
        "sample_std_error_male=sample_std_male/np.sqrt(1000)\n",
        "sample_std_error_female=sample_std_female/np.sqrt(1000)\n",
        "\n",
        "Upper_Limit_male=z99*sample_std_error_male + sample_mean_male\n",
        "Lower_Limit_male=sample_mean_male - z99*sample_std_error_male\n",
        "\n",
        "Upper_Limit_female=z99*sample_std_error_female + sample_mean_female\n",
        "Lower_Limit_female=sample_mean_female - z99*sample_std_error_female\n",
        "\n",
        "print(\"Male_CI: \",[Lower_Limit_male,Upper_Limit_male])\n",
        "print(\"Female_CI: \",[Lower_Limit_female,Upper_Limit_female])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LeOI4XaPT0zB",
        "outputId": "ac336e29-637c-4f85-a79e-8fc547c29596"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Population avg spend amount for Male: 925344.40\n",
            "Population avg spend amount for Female: 712024.39\n",
            "\n",
            "Sample avg spend amount for Male: 925612.32\n",
            "Sample avg spend amount for Female: 712628.85\n",
            "\n",
            "Sample std for Male: 33064.28\n",
            "Sample std for Female: 25553.47\n",
            "\n",
            "Sample std error for Male: 1045.58\n",
            "Sample std error for Female: 808.07\n",
            "\n",
            "Male_CI:  [922918.8930129694, 928305.7431850306]\n",
            "Female_CI:  [710547.2558632406, 714710.4418667596]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Finding the sample(sample size=1000) avg purchase amount for males and females\n",
        "genders = [\"M\", \"F\"]\n",
        "\n",
        "sample_size = 1500\n",
        "\n",
        "num_repitions = 1000\n",
        "male_means = []\n",
        "female_means = []\n",
        "\n",
        "for i in range(num_repitions):\n",
        "    male_mean = avgamt_male.sample(sample_size, replace=True)['Purchase'].mean()\n",
        "    female_mean = avgamt_female.sample(sample_size, replace=True)['Purchase'].mean()\n",
        "\n",
        "    male_means.append(male_mean)\n",
        "    female_means.append(female_mean)\n",
        "\n",
        "#Taking the values for z at 90%, 95% and 99% confidence interval as:\n",
        "z90=1.645 #90% Confidence Interval\n",
        "z95=1.960 #95% Confidence Interval\n",
        "z99=2.576 #99% Confidence Interval\n",
        "\n",
        "print(\"Population avg spend amount for Male: {:.2f}\".format(avgamt_male['Purchase'].mean()))\n",
        "print(\"Population avg spend amount for Female: {:.2f}\\n\".format(avgamt_female['Purchase'].mean()))\n",
        "\n",
        "print(\"Sample avg spend amount for Male: {:.2f}\".format(np.mean(male_means)))\n",
        "print(\"Sample avg spend amount for Female: {:.2f}\\n\".format(np.mean(female_means)))\n",
        "\n",
        "print(\"Sample std for Male: {:.2f}\".format(pd.Series(male_means).std()))\n",
        "print(\"Sample std for Female: {:.2f}\\n\".format(pd.Series(female_means).std()))\n",
        "\n",
        "print(\"Sample std error for Male: {:.2f}\".format(pd.Series(male_means).std()/np.sqrt(1500)))\n",
        "print(\"Sample std error for Female: {:.2f}\\n\".format(pd.Series(female_means).std()/np.sqrt(1500)))\n",
        "\n",
        "sample_mean_male=np.mean(male_means)\n",
        "sample_mean_female=np.mean(female_means)\n",
        "\n",
        "sample_std_male=pd.Series(male_means).std()\n",
        "sample_std_female=pd.Series(female_means).std()\n",
        "\n",
        "sample_std_error_male=sample_std_male/np.sqrt(1500)\n",
        "sample_std_error_female=sample_std_female/np.sqrt(1500)\n",
        "\n",
        "Upper_Limit_male=z90*sample_std_error_male + sample_mean_male\n",
        "Lower_Limit_male=sample_mean_male - z90*sample_std_error_male\n",
        "\n",
        "Upper_Limit_female=z90*sample_std_error_female + sample_mean_female\n",
        "Lower_Limit_female=sample_mean_female - z90*sample_std_error_female\n",
        "\n",
        "print(\"Male_CI: \",[Lower_Limit_male,Upper_Limit_male])\n",
        "print(\"Female_CI: \",[Lower_Limit_female,Upper_Limit_female])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "54-2T8OXUZSx",
        "outputId": "db3df388-1efe-476e-d0e4-703e0483b4b8"
      },
      "execution_count": 106,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Population avg spend amount for Male: 925344.40\n",
            "Population avg spend amount for Female: 712024.39\n",
            "\n",
            "Sample avg spend amount for Male: 924923.59\n",
            "Sample avg spend amount for Female: 711199.28\n",
            "\n",
            "Sample std for Male: 24903.97\n",
            "Sample std for Female: 20650.06\n",
            "\n",
            "Sample std error for Male: 643.02\n",
            "Sample std error for Female: 533.18\n",
            "\n",
            "Male_CI:  [923865.830647328, 925981.3589380054]\n",
            "Female_CI:  [710322.1950908367, 712076.3647824967]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Population avg spend amount for Male: {:.2f}\".format(avgamt_male['Purchase'].mean()))\n",
        "print(\"Population avg spend amount for Female: {:.2f}\\n\".format(avgamt_female['Purchase'].mean()))\n",
        "\n",
        "print(\"Sample avg spend amount for Male: {:.2f}\".format(np.mean(male_means)))\n",
        "print(\"Sample avg spend amount for Female: {:.2f}\\n\".format(np.mean(female_means)))\n",
        "\n",
        "print(\"Sample std for Male: {:.2f}\".format(pd.Series(male_means).std()))\n",
        "print(\"Sample std for Female: {:.2f}\\n\".format(pd.Series(female_means).std()))\n",
        "\n",
        "print(\"Sample std error for Male: {:.2f}\".format(pd.Series(male_means).std()/np.sqrt(1500)))\n",
        "print(\"Sample std error for Female: {:.2f}\\n\".format(pd.Series(female_means).std()/np.sqrt(1500)))\n",
        "\n",
        "sample_mean_male=np.mean(male_means)\n",
        "sample_mean_female=np.mean(female_means)\n",
        "\n",
        "sample_std_male=pd.Series(male_means).std()\n",
        "sample_std_female=pd.Series(female_means).std()\n",
        "\n",
        "sample_std_error_male=sample_std_male/np.sqrt(1500)\n",
        "sample_std_error_female=sample_std_female/np.sqrt(1500)\n",
        "\n",
        "Upper_Limit_male=z95*sample_std_error_male + sample_mean_male\n",
        "Lower_Limit_male=sample_mean_male - z95*sample_std_error_male\n",
        "\n",
        "Upper_Limit_female=z95*sample_std_error_female + sample_mean_female\n",
        "Lower_Limit_female=sample_mean_female - z95*sample_std_error_female\n",
        "\n",
        "print(\"Male_CI: \",[Lower_Limit_male,Upper_Limit_male])\n",
        "print(\"Female_CI: \",[Lower_Limit_female,Upper_Limit_female])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Zifbw-2XUqNA",
        "outputId": "2a9bd68e-6392-42c1-927f-59848ae3c43e"
      },
      "execution_count": 107,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Population avg spend amount for Male: 925344.40\n",
            "Population avg spend amount for Female: 712024.39\n",
            "\n",
            "Sample avg spend amount for Male: 924923.59\n",
            "Sample avg spend amount for Female: 711199.28\n",
            "\n",
            "Sample std for Male: 24903.97\n",
            "Sample std for Female: 20650.06\n",
            "\n",
            "Sample std error for Male: 643.02\n",
            "Sample std error for Female: 533.18\n",
            "\n",
            "Male_CI:  [923663.2800663058, 926183.9095190277]\n",
            "Female_CI:  [710154.2426735502, 712244.3171997833]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Population avg spend amount for Male: {:.2f}\".format(avgamt_male['Purchase'].mean()))\n",
        "print(\"Population avg spend amount for Female: {:.2f}\\n\".format(avgamt_female['Purchase'].mean()))\n",
        "\n",
        "print(\"Sample avg spend amount for Male: {:.2f}\".format(np.mean(male_means)))\n",
        "print(\"Sample avg spend amount for Female: {:.2f}\\n\".format(np.mean(female_means)))\n",
        "\n",
        "print(\"Sample std for Male: {:.2f}\".format(pd.Series(male_means).std()))\n",
        "print(\"Sample std for Female: {:.2f}\\n\".format(pd.Series(female_means).std()))\n",
        "\n",
        "print(\"Sample std error for Male: {:.2f}\".format(pd.Series(male_means).std()/np.sqrt(1500)))\n",
        "print(\"Sample std error for Female: {:.2f}\\n\".format(pd.Series(female_means).std()/np.sqrt(1500)))\n",
        "\n",
        "sample_mean_male=np.mean(male_means)\n",
        "sample_mean_female=np.mean(female_means)\n",
        "\n",
        "sample_std_male=pd.Series(male_means).std()\n",
        "sample_std_female=pd.Series(female_means).std()\n",
        "\n",
        "sample_std_error_male=sample_std_male/np.sqrt(1500)\n",
        "sample_std_error_female=sample_std_female/np.sqrt(1500)\n",
        "\n",
        "Upper_Limit_male=z99*sample_std_error_male + sample_mean_male\n",
        "Lower_Limit_male=sample_mean_male - z99*sample_std_error_male\n",
        "\n",
        "Upper_Limit_female=z99*sample_std_error_female + sample_mean_female\n",
        "Lower_Limit_female=sample_mean_female - z99*sample_std_error_female\n",
        "\n",
        "print(\"Male_CI: \",[Lower_Limit_male,Upper_Limit_male])\n",
        "print(\"Female_CI: \",[Lower_Limit_female,Upper_Limit_female])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yAG1cg4lVmwJ",
        "outputId": "e73cc505-29f6-487d-facd-969d2c8ae5cc"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Population avg spend amount for Male: 925344.40\n",
            "Population avg spend amount for Female: 712024.39\n",
            "\n",
            "Sample avg spend amount for Male: 924923.59\n",
            "Sample avg spend amount for Female: 711199.28\n",
            "\n",
            "Sample std for Male: 24903.97\n",
            "Sample std for Female: 20650.06\n",
            "\n",
            "Sample std error for Male: 643.02\n",
            "Sample std error for Female: 533.18\n",
            "\n",
            "Male_CI:  [923267.1811523066, 926580.0084330268]\n",
            "Female_CI:  [709825.8023908564, 712572.757482477]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "avg_Marital = df.groupby(['User_ID', 'Marital_Status'])[['Purchase']].sum()\n",
        "avg_Marital = avg_Marital.reset_index()\n",
        "\n",
        "avgamt_married = avg_Marital[avg_Marital['Marital_Status']==1]\n",
        "avgamt_single = avg_Marital[avg_Marital['Marital_Status']==0]\n",
        "\n",
        "sample_size = 1000\n",
        "num_repitions = 1000\n",
        "married_means = []\n",
        "single_means = []\n",
        "\n",
        "for i in range(num_repitions):\n",
        "    avg_married = avg_Marital[avg_Marital['Marital_Status']==1].sample(sample_size, replace=True)['Purchase'].mean()\n",
        "    avg_single = avg_Marital[avg_Marital['Marital_Status']==0].sample(sample_size, replace=True)['Purchase'].mean()\n",
        "\n",
        "    married_means.append(avg_married)\n",
        "    single_means.append(avg_single)\n",
        "\n",
        "\n",
        "fig, axis = plt.subplots(nrows=1, ncols=2, figsize=(20, 6))\n",
        "\n",
        "axis[0].hist(married_means, bins=35)\n",
        "axis[1].hist(single_means, bins=35)\n",
        "axis[0].set_title(\"Married distribution of means, Sample size: 1000\")\n",
        "axis[1].set_title(\"Unmarried distribution of means, Sample size: 1000\")\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "93HpDUO9VyZ1",
        "outputId": "31987274-3b16-415e-9a45-894270f07550"
      },
      "execution_count": 109,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "avg_Marital['Marital_Status'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uCMbgZsaWI0Z",
        "outputId": "2795b90a-1603-4836-bfc6-b4e8ad0c09a1"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Marital_Status\n",
              "0    3417\n",
              "1    2474\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Taking the values for z at 90%, 95% and 99% confidence interval as:\n",
        "z90=1.645 #90% Confidence Interval\n",
        "z95=1.960 #95% Confidence Interval\n",
        "z99=2.576 #99% Confidence Interval\n",
        "\n",
        "print(\"Population avg spend amount for Married: {:.2f}\".format(avgamt_married['Purchase'].mean()))\n",
        "print(\"Population avg spend amount for Single: {:.2f}\\n\".format(avgamt_single['Purchase'].mean()))\n",
        "\n",
        "print(\"Sample avg spend amount for Married: {:.2f}\".format(np.mean(married_means)))\n",
        "print(\"Sample avg spend amount for Single: {:.2f}\\n\".format(np.mean(single_means)))\n",
        "\n",
        "print(\"Sample std for Married: {:.2f}\".format(pd.Series(married_means).std()))\n",
        "print(\"Sample std for Single: {:.2f}\\n\".format(pd.Series(single_means).std()))\n",
        "\n",
        "print(\"Sample std error for Married: {:.2f}\".format(pd.Series(married_means).std()/np.sqrt(1000)))\n",
        "print(\"Sample std error for Single: {:.2f}\\n\".format(pd.Series(single_means).std()/np.sqrt(1000)))\n",
        "\n",
        "sample_mean_married=np.mean(married_means)\n",
        "sample_mean_single=np.mean(single_means)\n",
        "\n",
        "sample_std_married=pd.Series(married_means).std()\n",
        "sample_std_single=pd.Series(single_means).std()\n",
        "\n",
        "sample_std_error_married=sample_std_married/np.sqrt(1000)\n",
        "sample_std_error_single=sample_std_single/np.sqrt(1000)\n",
        "\n",
        "Upper_Limit_married=z90*sample_std_error_male + sample_mean_married\n",
        "Lower_Limit_married=sample_mean_married - z90*sample_std_error_married\n",
        "\n",
        "Upper_Limit_single=z90*sample_std_error_single + sample_mean_single\n",
        "Lower_Limit_single=sample_mean_single - z90*sample_std_error_single\n",
        "\n",
        "print(\"Married_CI: \",[Lower_Limit_married,Upper_Limit_married])\n",
        "print(\"Single_CI: \",[Lower_Limit_single,Upper_Limit_single])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9GAeIbPDWYcK",
        "outputId": "b38a9d8e-a8d7-4a04-ebf7-efa24a5706c2"
      },
      "execution_count": 113,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Population avg spend amount for Married: 843526.80\n",
            "Population avg spend amount for Single: 880575.78\n",
            "\n",
            "Sample avg spend amount for Married: 842770.49\n",
            "Sample avg spend amount for Single: 880319.30\n",
            "\n",
            "Sample std for Married: 28810.88\n",
            "Sample std for Single: 30466.29\n",
            "\n",
            "Sample std error for Married: 911.08\n",
            "Sample std error for Single: 963.43\n",
            "\n",
            "Married_CI:  [841271.7623681626, 843828.2531023386]\n",
            "Single_CI:  [878734.4570565854, 881904.1373154147]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Taking the values for z at 90%, 95% and 99% confidence interval as:\n",
        "z90=1.645 #90% Confidence Interval\n",
        "z95=1.960 #95% Confidence Interval\n",
        "z99=2.576 #99% Confidence Interval\n",
        "\n",
        "print(\"Population avg spend amount for Married: {:.2f}\".format(avgamt_married['Purchase'].mean()))\n",
        "print(\"Population avg spend amount for Single: {:.2f}\\n\".format(avgamt_single['Purchase'].mean()))\n",
        "\n",
        "print(\"Sample avg spend amount for Married: {:.2f}\".format(np.mean(married_means)))\n",
        "print(\"Sample avg spend amount for Single: {:.2f}\\n\".format(np.mean(single_means)))\n",
        "\n",
        "print(\"Sample std for Married: {:.2f}\".format(pd.Series(married_means).std()))\n",
        "print(\"Sample std for Single: {:.2f}\\n\".format(pd.Series(single_means).std()))\n",
        "\n",
        "print(\"Sample std error for Married: {:.2f}\".format(pd.Series(married_means).std()/np.sqrt(1000)))\n",
        "print(\"Sample std error for Single: {:.2f}\\n\".format(pd.Series(single_means).std()/np.sqrt(1000)))\n",
        "\n",
        "sample_mean_married=np.mean(married_means)\n",
        "sample_mean_single=np.mean(single_means)\n",
        "\n",
        "sample_std_married=pd.Series(married_means).std()\n",
        "sample_std_single=pd.Series(single_means).std()\n",
        "\n",
        "sample_std_error_married=sample_std_married/np.sqrt(1000)\n",
        "sample_std_error_single=sample_std_single/np.sqrt(1000)\n",
        "\n",
        "Upper_Limit_married=z95*sample_std_error_male + sample_mean_married\n",
        "Lower_Limit_married=sample_mean_married - z95*sample_std_error_married\n",
        "\n",
        "Upper_Limit_single=z95*sample_std_error_single + sample_mean_single\n",
        "Lower_Limit_single=sample_mean_single - z95*sample_std_error_single\n",
        "\n",
        "print(\"Married_CI: \",[Lower_Limit_married,Upper_Limit_married])\n",
        "print(\"Single_CI: \",[Lower_Limit_single,Upper_Limit_single])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rM7__HaxWu4p",
        "outputId": "1e7513f7-1b86-4d50-e36e-327baae81a34"
      },
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Population avg spend amount for Married: 843526.80\n",
            "Population avg spend amount for Single: 880575.78\n",
            "\n",
            "Sample avg spend amount for Married: 842770.49\n",
            "Sample avg spend amount for Single: 880319.30\n",
            "\n",
            "Sample std for Married: 28810.88\n",
            "Sample std for Single: 30466.29\n",
            "\n",
            "Sample std error for Married: 911.08\n",
            "Sample std error for Single: 963.43\n",
            "\n",
            "Married_CI:  [840984.7721703001, 844030.8036833609]\n",
            "Single_CI:  [878430.9770318038, 882207.6173401963]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Taking the values for z at 90%, 95% and 99% confidence interval as:\n",
        "z90=1.645 #90% Confidence Interval\n",
        "z95=1.960 #95% Confidence Interval\n",
        "z99=2.576 #99% Confidence Interval\n",
        "\n",
        "print(\"Population avg spend amount for Married: {:.2f}\".format(avgamt_married['Purchase'].mean()))\n",
        "print(\"Population avg spend amount for Single: {:.2f}\\n\".format(avgamt_single['Purchase'].mean()))\n",
        "\n",
        "print(\"Sample avg spend amount for Married: {:.2f}\".format(np.mean(married_means)))\n",
        "print(\"Sample avg spend amount for Single: {:.2f}\\n\".format(np.mean(single_means)))\n",
        "\n",
        "print(\"Sample std for Married: {:.2f}\".format(pd.Series(married_means).std()))\n",
        "print(\"Sample std for Single: {:.2f}\\n\".format(pd.Series(single_means).std()))\n",
        "\n",
        "print(\"Sample std error for Married: {:.2f}\".format(pd.Series(married_means).std()/np.sqrt(1000)))\n",
        "print(\"Sample std error for Single: {:.2f}\\n\".format(pd.Series(single_means).std()/np.sqrt(1000)))\n",
        "\n",
        "sample_mean_married=np.mean(married_means)\n",
        "sample_mean_single=np.mean(single_means)\n",
        "\n",
        "sample_std_married=pd.Series(married_means).std()\n",
        "sample_std_single=pd.Series(single_means).std()\n",
        "\n",
        "sample_std_error_married=sample_std_married/np.sqrt(1000)\n",
        "sample_std_error_single=sample_std_single/np.sqrt(1000)\n",
        "\n",
        "Upper_Limit_married=z99*sample_std_error_male + sample_mean_married\n",
        "Lower_Limit_married=sample_mean_married - z99*sample_std_error_married\n",
        "\n",
        "Upper_Limit_single=z99*sample_std_error_single + sample_mean_single\n",
        "Lower_Limit_single=sample_mean_single - z99*sample_std_error_single\n",
        "\n",
        "print(\"Married_CI: \",[Lower_Limit_married,Upper_Limit_married])\n",
        "print(\"Single_CI: \",[Lower_Limit_single,Upper_Limit_single])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3TiYP0FOXipK",
        "outputId": "c2fe4142-b3a6-452c-8e0d-65cf9129491e"
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Population avg spend amount for Married: 843526.80\n",
            "Population avg spend amount for Single: 880575.78\n",
            "\n",
            "Sample avg spend amount for Married: 842770.49\n",
            "Sample avg spend amount for Single: 880319.30\n",
            "\n",
            "Sample std for Married: 28810.88\n",
            "Sample std for Single: 30466.29\n",
            "\n",
            "Sample std error for Married: 911.08\n",
            "Sample std error for Single: 963.43\n",
            "\n",
            "Married_CI:  [840423.5468944802, 844426.9025973601]\n",
            "Single_CI:  [877837.5049833421, 882801.089388658]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "avgamt_age = df.groupby(['User_ID', 'Age'])[['Purchase']].sum()\n",
        "avgamt_age = avgamt_age.reset_index()\n",
        "avgamt_age['Age'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hX11A_8VX6AR",
        "outputId": "dccdaa25-f989-44f8-df62-ba75bc7eb8f0"
      },
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Age\n",
              "26-35    2053\n",
              "36-45    1167\n",
              "18-25    1069\n",
              "46-50     531\n",
              "51-55     481\n",
              "55+       372\n",
              "0-17      218\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sample_size = 200\n",
        "num_repitions = 1000\n",
        "\n",
        "all_sample_means = {}\n",
        "\n",
        "age_intervals = ['26-35', '36-45', '18-25', '46-50', '51-55', '55+', '0-17']\n",
        "for i in age_intervals:\n",
        "    all_sample_means[i] = []\n",
        "\n",
        "for i in age_intervals:\n",
        "    for j in range(num_repitions):\n",
        "\n",
        "        mean = avgamt_age[avgamt_age['Age']==i].sample(sample_size, replace=True)['Purchase'].mean()\n",
        "        all_sample_means[i].append(mean)\n",
        "\n",
        "\n",
        "\n",
        "fig, axis = plt.subplots(nrows=3, ncols=2, figsize=(20, 15))\n",
        "\n",
        "sns.histplot(all_sample_means['26-35'],bins=35,ax=axis[0,0])\n",
        "sns.histplot(all_sample_means['36-45'],bins=35,ax=axis[0,1])\n",
        "sns.histplot(all_sample_means['18-25'],bins=35,ax=axis[1,0])\n",
        "sns.histplot(all_sample_means['46-50'],bins=35,ax=axis[1,1])\n",
        "sns.histplot(all_sample_means['51-55'],bins=35,ax=axis[2,0])\n",
        "sns.histplot(all_sample_means['55+'],bins=35,ax=axis[2,1])\n",
        "\n",
        "plt.show()\n",
        "\n",
        "plt.figure(figsize=(10, 5))\n",
        "sns.histplot(all_sample_means['0-17'],bins=35)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "pruqxj0TYLc9",
        "outputId": "c55167b4-1155-431f-c2ef-6567a96d5c03"
      },
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1500 with 6 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "t_chM0bMYS0w"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Recommendations\n",
        "•\t*Target Male Customers:* Focus on retaining existing male customers and attracting more male customers by tailoring marketing strategies and product offerings to their preferences.\n",
        "*************************************************************************\n",
        "•\t*Product Category Focus:* Allocate resources to promote and sell products in categories 1, 5, and 8 due to their high purchasing frequency, potentially by offering deals or incentives.\n",
        "*************************************************************************\n",
        "•\t*Acquisition of Unmarried Customers:* Develop marketing campaigns and incentives to attract unmarried customers, who tend to spend more, potentially targeting demographics where they are more prevalent.\n",
        "*************************************************************************\n",
        "•\t*Target Age Group 26-35:* Direct marketing efforts towards customers aged 26-35, who have shown to spend more, potentially by offering products and promotions that resonate with this age group.\n",
        "*************************************************************************\n",
        "•\t*City Category Focus:* Concentrate marketing efforts on customers aged 26-35 in City Categories B and A, as they represent a significant portion of the customer base, potentially by tailoring promotions and products to these demographics.\n",
        "*************************************************************************\n",
        "•\t*Focus on City Category C:* Increase product offerings and marketing initiatives in City Category C, especially targeting male customers, who spend more in this category.\n",
        "*************************************************************************\n",
        "•\t*Consider Dropping Low-Purchase Product Categories:* Evaluate the profitability and demand of product categories 19, 20, and 13, considering discontinuing them if they do not contribute significantly to revenue.\n",
        "*************************************************************************\n",
        "•\t*Reward Top Customers:* Offer exclusive offers and discounts to the top 10 customers who contribute the most to sales, aiming to retain their loyalty and increase their lifetime value.\n",
        "*************************************************************************\n",
        "•\t*Offer Benefits to High-Contributing Occupations:* Partner with financial institutions to offer credit cards or other benefits to customers in high-contributing occupations, potentially increasing their purchasing power and loyalty.\n",
        "*************************************************************************\n",
        "•\t*Maintain Quality of Top Products:* Ensure consistent quality and customer satisfaction for top-selling products to maintain their popularity and drive further sales.\n",
        "*************************************************************************\n",
        "•\t*Focus on 1-Year City Residents:* Target marketing efforts towards customers who have been living in the city for one year, as they represent a significant portion of total purchase amounts, potentially by offering incentives or loyalty programs to this group.\n",
        "*************************************************************************\n",
        "•\t*Emphasize Mid-Range Products:* Highlight and promote products in the 5k to 10k price range, which have the highest frequency of purchase orders, potentially by offering bundle deals or discounts to encourage larger purchases.\n",
        "********************************************************************************************************************************************************************\n"
      ],
      "metadata": {
        "id": "hN73qL3cbOEu"
      }
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPd65FBTfCOy9AKK1h1IMP+",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}